{"ts":1358959316858,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1358959198844,"patch":[[{"diffs":[[1,"# encoding: utf-8\r\n\r\nclass Admin\r\n    include Cinch::Plugin\r\n\r\n\tprefix lambda{ |m| /^#{m.bot.nick},?:?\\s/i }\r\n\r\n\r\n\tmatch /nick (.+)/i, method: :nick\r\n\tdef nick(m, name)\r\n\t\treturn unless check_admin(m.user)\r\n\t\t@bot.nick = name\r\n\tend\r\n\r\n\r\n\tmatch /quit(?: (.+))?/i, method: :quit\r\n\tdef quit(m, msg)\r\n\t\treturn unless check_admin(m.user)\r\n\t\tmsg ||= \"brb\"\r\n\t\tbot.quit(msg)\r\n\tend\r\n\r\n\r\n\tmatch /msg (.+?) (.+)/i, method: :message\r\n\tdef message(m, who, text)\r\n\t\treturn unless check_admin(m.user)\r\n\t\tUser(who).send text\r\n\tend\r\n\r\n\r\n\tmatch /say (.+?) (.+)/i, method: :message_channel\r\n\tdef message_channel(m, chan, text)\r\n\t\treturn unless check_admin(m.user)\r\n\t\tChannel(chan).send text\r\n\tend\r\n\r\n\r\n\tmatch /kick (\\S+)(:? (.+))?/i, method: :kick\r\n\tdef kick(m, nick, reason)\r\n\t\treturn unless check_admin(m.user)\r\n\t\treason ||= \"Get out\"\r\n\t\tm.channel.kick(nick, reason)\r\n\tend\r\n\r\n\r\n\tmatch /ban (\\S+)(:? (.+))?/i, method: :ban\r\n\tdef ban(m, nick, reason)\r\n\t\treturn unless check_admin(m.user)\r\n\t\treason ||= \"Get out\"\r\n\t\tbaddie = User(nick);\r\n\t\tm.channel.ban(baddie.mask(\"*!*@%h\"));\r\n\t\tm.channel.kick(nick, reason)\r\n\tend\r\n\r\n\r\n\r\n  # Ignore users\r\n\r\n\tmatch /ignore (.+)/i, method: :ignore\r\n\tdef ignore(m, username)\r\n\t\treturn unless check_admin(m.user)\r\n\r\n\t\tbegin\r\n\t\t\told = IgnoreDB.first(:nick => username.downcase)\r\n\t\t\told.destroy! unless old.nil?\r\n\r\n\t\t\tnew = IgnoreDB.new(:nick => username.downcase)\r\n\t\t\tnew.save\r\n\r\n\t\t\tm.reply \"I never liked him anyway\"\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend\r\n\r\n\tmatch /unignore (.+)/i, method: :unignore\r\n\tdef unignore(m, username)\r\n\t\treturn unless check_admin(m.user)\r\n\r\n\t\tbegin\r\n\t\t\told = IgnoreDB.first(:nick => username.downcase)\r\n\t\t\told.destroy! unless old.nil?\r\n\r\n\t\t\tm.reply \"Sorry about that\"\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend\r\n\r\n\tmatch /list ignores/i, method: :list_ignores\r\n\tdef list_ignores(m)\r\n\t\treturn unless check_admin(m.user)\r\n\t\tbegin\r\n\t\t\tagent = Mechanize.new\r\n\t\t\trows = \"\"\r\n\r\n\t\t\tIgnoreDB.all.each do |item|\r\n\t\t\t\trows = rows + item.id.to_s + \". \" + item.nick + \"\\n\"\r\n\t\t\tend\r\n\r\n\t\t\tpage = agent.get \"http://p.sjis.me/\"\r\n\t\t\tform = page.forms.first\r\n\t\t\tform.content = rows\r\n\t\t\tpage = agent.submit form\r\n\r\n\t\t\tm.reply page.search(\"//a[@name='plain']/@href\").text, true\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend\r\n\r\n\r\n\r\n  # Make/Remove admins\r\n\r\n\tmatch /add admin (.+)/i, method: :add_admin\r\n\tdef add_admin(m, username)\r\n\t\treturn unless m.user.nick.downcase == $BOTOWNER\r\n\r\n\t\tbegin\r\n\t\t\told = AdminDB.first(:nick => username.downcase)\r\n\t\t\told.destroy! unless old.nil?\r\n\r\n\t\t\tnew = AdminDB.new(:nick => username.downcase)\r\n\t\t\tnew.save\r\n\r\n\t\t\tm.reply \"A new master!\"\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend\r\n\r\n\tmatch /remove admin (.+)/i, method: :del_admin\r\n\tdef del_admin(m, username)\r\n\t\treturn unless m.user.nick.to_s.downcase == $BOTOWNER\r\n\r\n\t\tbegin\r\n\t\t\told = AdminDB.first(:nick => username.downcase)\r\n\t\t\told.destroy! unless old.nil?\r\n\r\n\t\t\tm.reply \"I never liked him anyway\"\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend\r\n\r\n\tmatch /list admins/i, method: :list_admins\r\n\tdef list_admins(m)\r\n\t\treturn unless check_admin(m.user)\r\n\t\tbegin\r\n\t\t\tagent = Mechanize.new\r\n\t\t\trows = \"\"\r\n\r\n\t\t\tAdminDB.all.each do |item|\r\n\t\t\t\trows = rows + item.id.to_s + \". \" + item.nick + \"\\n\"\r\n\t\t\tend\r\n\r\n\t\t\tpage = agent.get \"http://p.sjis.me/\"\r\n\t\t\tform = page.forms.first\r\n\t\t\tform.content = rows\r\n\t\t\tpage = agent.submit form\r\n\r\n\t\t\tm.reply page.search(\"//a[@name='plain']/@href\").text, true\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend\r\n\r\n\r\n\r\n  # URI ON/OFF\r\n\r\n\tmatch /passive on(?: (.+))?/i, method: :passive_on\r\n\tdef passive_on(m, channel)\r\n\t\treturn unless check_admin(m.user)\r\n\t\tchannel ||= m.channel.to_s\r\n\r\n\t\tbegin\r\n\t\t\told = PassiveDB.first(:channel => channel.downcase)\r\n\t\t\told.destroy! unless old.nil?\r\n\r\n\t\t\tm.reply \"Now reacting to URIs\"\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend\r\n\r\n\tmatch /passive off(?: (.+))?/i, method: :passive_off\r\n\tdef passive_off(m, channel)\r\n\t\treturn unless check_admin(m.user)\r\n\t\tchannel ||= m.channel.to_s\r\n\r\n\t\tbegin\r\n\t\t\told = PassiveDB.first(:channel => channel.downcase)\r\n\t\t\told.destroy! unless old.nil?\r\n\r\n\t\t\tnew = PassiveDB.new(:channel => channel.downcase)\r\n\t\t\tnew.save\r\n\r\n\t\t\tm.reply \"No longer reacting to URIs\"\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend\r\n\r\n\tmatch /file info on(?: (.+))?/i, method: :passive_files_on\r\n\tdef passive_files_on(m, channel)\r\n\t\treturn unless check_admin(m.user)\r\n\t\tchannel ||= m.channel.to_s\r\n\r\n\t\tbegin\r\n\t\t\told = PassiveFDB.first(:channel => channel.downcase)\r\n\t\t\told.destroy! unless old.nil?\r\n\r\n\t\t\tm.reply \"Now reacting to file URIs\"\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend\r\n\r\n\tmatch /file info off(?: (.+))?/i, method: :passive_files_off\r\n\tdef passive_files_off(m, channel)\r\n\t\treturn unless check_admin(m.user)\r\n\t\tchannel ||= m.channel.to_s\r\n\r\n\t\tbegin\r\n\t\t\told = PassiveFDB.first(:channel => channel.downcase)\r\n\t\t\told.destroy! unless old.nil?\r\n\r\n\t\t\tnew = PassiveFDB.new(:channel => channel.downcase)\r\n\t\t\tnew.save\r\n\r\n\t\t\tm.reply \"No longer reacting to file URIs\"\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend\r\n\r\n\r\n\r\n  # Join/Part channels\r\n\r\n\tmatch /join (.+)/i, method: :join\r\n\tdef join(m, channel)\r\n\t\treturn unless check_admin(m.user)\r\n\r\n\t\tbegin\r\n\t\t\told = JoinDB.first(:channel => channel.downcase)\r\n\t\t\told.destroy! unless old.nil?\r\n\r\n\t\t\tnew = JoinDB.new(:channel => channel.downcase)\r\n\t\t\tnew.save\r\n\r\n\t\t\tChannel(channel).join\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend\r\n\r\n\tmatch /part(?: (.+))?/i, method: :part\r\n\tdef part(m, channel)\r\n\t\treturn unless check_admin(m.user)\r\n\t\tchannel ||= m.channel.to_s\r\n\r\n\t\tbegin\r\n\t\t\told = JoinDB.first(:channel => channel.downcase)\r\n\t\t\told.destroy! unless old.nil?\r\n\r\n\t\t\tChannel(channel).part if channel\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend\r\n\r\n\tmatch /list channels/i, method: :list_channels\r\n\tdef list_channels(m)\r\n\t\treturn unless check_admin(m.user)\r\n\t\tbegin\r\n\t\t\tagent = Mechanize.new\r\n\t\t\trows = \"\"\r\n\r\n\t\t\tJoinDB.all.each do |item|\r\n\t\t\t\trows = rows + item.id.to_s + \". \" + item.channel + \"\\n\"\r\n\t\t\tend\r\n\r\n\t\t\tpage = agent.get \"http://p.sjis.me/\"\r\n\t\t\tform = page.forms.first\r\n\t\t\tform.content = rows\r\n\t\t\tpage = agent.submit form\r\n\r\n\t\t\tm.reply page.search(\"//a[@name='plain']/@href\").text, true\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend \r\n\r\n\r\n\r\n\t# Last.fm \r\n\r\n\tmatch /list lastfm/i, method: :list_lastfm\r\n\tdef list_lastfm(m)\r\n\t\treturn unless check_admin(m.user)\r\n\t\tbegin\r\n\t\t\tagent = Mechanize.new\r\n\t\t\trows = \"\"\r\n\r\n\t\t\tLastfmDB.all.each do |item|\r\n\t\t\t\trows = rows + item.id.to_s + \". \" + item.nick + \" = \" + item.username + \"\\n\"\r\n\t\t\tend\r\n\r\n\t\t\tpage = agent.get \"http://p.sjis.me/\"\r\n\t\t\tform = page.forms.first\r\n\t\t\tform.content = rows\r\n\t\t\tpage = agent.submit form\r\n\r\n\t\t\tm.reply page.search(\"//a[@name='plain']/@href\").text, true\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend \r\n\r\n\tmatch /remove lastfm (\\d+)/i, method: :del_lastfm\r\n\tdef del_lastfm(m, number)\r\n\t\treturn unless check_admin(m.user)\r\n\t\tbegin\r\n\t\t\told = LastfmDB.first(:id => number.to_i)\r\n\t\t\told.destroy! unless old.nil?\r\n\r\n\t\t\tm.reply \"Done\", true\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend\r\n\r\n\r\n\r\n\t# Locations \r\n\r\n\tmatch /list locations/i, method: :list_locations\r\n\tdef list_locations(m)\r\n\t\treturn unless check_admin(m.user)\r\n\t\tbegin\r\n\t\t\tagent = Mechanize.new\r\n\t\t\trows = \"\"\r\n\r\n\t\t\tLocationDB.all.each do |item|\r\n\t\t\t\trows = rows + item.id.to_s + \". \" + item.nick + \" = \" + item.location + \"\\n\"\r\n\t\t\tend\r\n\r\n\t\t\tpage = agent.get \"http://p.sjis.me/\"\r\n\t\t\tform = page.forms.first\r\n\t\t\tform.content = rows\r\n\t\t\tpage = agent.submit form\r\n\r\n\t\t\tm.reply page.search(\"//a[@name='plain']/@href\").text, true\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend \r\n\r\n\tmatch /remove location (\\d+)/i, method: :del_location\r\n\tdef del_location(m, number)\r\n\t\treturn unless check_admin(m.user)\r\n\t\tbegin\r\n\t\t\told = LocationDB.first(:id => number.to_i)\r\n\t\t\told.destroy! unless old.nil?\r\n\r\n\t\t\tm.reply \"Done\", true\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend\r\n\r\n\r\n\r\n\t# Insults\r\n\r\n\tmatch /add insult (.+)/i, method: :add_insult\r\n\tdef add_insult(m, text)\r\n\t\treturn unless check_admin(m.user)\r\n\r\n\t\tbegin\r\n\t\t\tnew = InsultDB.new(:insult => text)\r\n\t\t\tnew.save\r\n\r\n\t\t\tm.reply \"Added\"\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend \r\n\r\n\tmatch /remove insult (\\d+)/i, method: :del_insult\r\n\tdef del_insult(m, number)\r\n\t\treturn unless check_admin(m.user)\r\n\t\tbegin\r\n\t\t\told = InsultDB.first(:id => number.to_i)\r\n\t\t\told.destroy! unless old.nil?\r\n\r\n\t\t\tm.reply \"Done\", true\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend\r\n\r\n\tmatch /list insults/i, method: :list_insults\r\n\tdef list_insults(m)\r\n\t\treturn unless check_admin(m.user)\r\n\t\tbegin\r\n\t\t\tagent = Mechanize.new\r\n\t\t\trows = \"\"\r\n\r\n\t\t\tInsultDB.all.each do |item|\r\n\t\t\t\trows = rows + item.id.to_s + \". \" + item.insult + \"\\n\"\r\n\t\t\tend\r\n\r\n\t\t\tpage = agent.get \"http://p.sjis.me/\"\r\n\t\t\tform = page.forms.first\r\n\t\t\tform.content = rows\r\n\t\t\tpage = agent.submit form\r\n\r\n\t\t\tm.reply page.search(\"//a[@name='plain']/@href\").text, true\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend \r\n\r\nend"]],"start1":0,"start2":0,"length1":0,"length2":9537}]],"length":9537,"saved":false}
{"contributors":[],"silentsave":false,"ts":1358962351389,"patch":[[{"diffs":[[0,"\n\tprefix"],[1," ="],[0," lambda{"]],"start1":62,"start2":62,"length1":16,"length2":18}]],"length":9539,"saved":false}
{"ts":1358962382541,"patch":[[{"diffs":[[0,"\n\tprefix"],[-1," ="],[0," lambda{"]],"start1":62,"start2":62,"length1":18,"length2":16}]],"length":9537,"saved":false}
{"ts":1358962471189,"patch":[[{"diffs":[[0,"gin\r\n\r\n\t"],[1,"#"],[0,"prefix l"]],"start1":56,"start2":56,"length1":16,"length2":17}]],"length":9538,"saved":false}
{"ts":1358962600523,"patch":[[{"diffs":[[0,"\n\r\n\t"],[-1,"#"],[1,"set :"],[0,"prefix"],[1,","],[0," lam"]],"start1":60,"start2":60,"length1":15,"length2":20}]],"length":9543,"saved":false}
