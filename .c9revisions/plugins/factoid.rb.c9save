{"ts":1368549237829,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"# encoding: utf-8\r\n\r\nclass FactoidDB\r\n    include Cinch::Plugin\r\n    \r\n    match /fact(?:oid)? get (\\S+)$/i, method :getFactoid\r\n    match /fact(?:oid)? (\\S+)$/i, method: :getFactoid\r\n    def getFactoid(m, user)\r\n        return unless ignore_nick(m.user.nick).nil?\r\n        begin\r\n    \t\t            \r\n            factoid = Factoid.first :key => m.downcase\r\n            if factoid.nil?\r\n                m.reply \"FactoidDB | No factoid found for key #{m.downcase}\", true\r\n            else        \r\n                m.reply \"FactoidDB | #{factoid.key) | #{factoid.value}\", true\r\n            end\r\n    \trescue Exception => x\r\n            error x.message\r\n            error x.backtrace.inspect\r\n\t\t\tm.reply \"FactoidDB | Error | #{x.message}\"\r\n\t\tend\r\n    end\r\n    \r\n    match /fact(?:oid)? add (\\S+)\\s+(\\S+)$/i, method: :addFactoid\r\n    def addFactoid(m, key, value)\r\n        return unless ignore_nick(m.user.nick).nil?\r\n        begin\r\n            key = key.downcase\r\n            factoid = Factoid.first_or_create :key => key\r\n            factoid.value = value\r\n            factoid.save\r\n        rescue Exception => x\r\n            error x.message\r\n            error x.backtrace.inspect\r\n            m.reply \"FactoidDB | Error | #{x.message}\"\r\n        end\r\n    end\r\n        \r\n    match /lift (?:remove|rm) (\\w+)/i, method: :removeLift\r\n    def removeLift(m, lift)\r\n        return unless ignore_nick(m.user.nick).nil?\r\n        \r\n        begin\r\n            nick = Nick.first_or_create :nick => m.user.nick.downcase\r\n            lift = nick.lifts.first( :lift => lift.downcase )\r\n            if lift.nil?\r\n                raise \"Lift does not exist\"\r\n            else\r\n                lift.destroy\r\n                m.reply \"LiftTracker | Deleted lift: #{lift.lift}\", true\r\n            end\r\n        rescue Exception => x\r\n            error x.message\r\n            error x.backtrace.inspect\r\n        \tm.reply \"LiftTracker | Error | #{x.message}\"\r\n        end\r\n    end\r\n    \r\nend"]],"start1":0,"start2":0,"length1":0,"length2":1962}]],"length":1962}
{"contributors":[],"silentsave":false,"ts":1368549596894,"patch":[[{"diffs":[[0,"d)? get "],[-1,""],[0,""],[1,"all (\\S+)$/i, method :getAllFactoid\r\n    def getAllFactoid(m, key)\r\n    return unless ignore_nick(m.user.nick).nil?\r\n        begin\r\n        \t            \r\n            factoid = Factoid.first :key => key.downcase\r\n            if factoid.nil?\r\n                m.reply \"FactoidDB | No factoid found for key #{key.downcase}\", true\r\n            else        \r\n                m.reply \"FactoidDB | #{factoid.key) | #{factoid.value}\", true\r\n            end\r\n    \trescue Exception => x\r\n            error x.message\r\n            error x.backtrace.inspect\r\n\t\t\tm.reply \"FactoidDB | Error | #{x.message}\"\r\n\t\tend\r\n    end\r\n    \r\n    match /fact(?:oid)? get "],[0,"(\\S+)$/i"]],"start1":91,"start2":91,"length1":16,"length2":659},{"diffs":[[0,"toid(m, "],[-1,"user"],[1,"key"],[0,")\r\n     "]],"start1":841,"start2":841,"length1":20,"length2":19},{"diffs":[[0,":key => "],[-1,"m"],[1,"key"],[0,".downcas"]],"start1":979,"start2":979,"length1":17,"length2":19},{"diffs":[[0,"r key #{"],[-1,"m"],[1,"key"],[0,".downcas"]],"start1":1086,"start2":1086,"length1":17,"length2":19}]],"length":2608,"saved":false}
{"ts":1368549716578,"patch":[[{"diffs":[[0,"ey) | #{factoid."],[-1,"value"],[1,"factoid_values.all.join(\" || \")"],[0,"}\", true\r\n      "]],"start1":501,"start2":501,"length1":37,"length2":63},{"diffs":[[0,"factoid."],[-1,"valu"],[1,"factoid_values.all.sampl"],[0,"e}\", tru"]],"start1":1224,"start2":1224,"length1":20,"length2":40}]],"length":2654,"saved":false}
{"ts":1368550208881,"patch":[[{"diffs":[[0,")? get ("],[-1,"\\S"],[1,".+) \\/(\\S+)\\//i,method :getSpecificFactoid\r\n    def getSpecificFactoid(m, key, regex)\r\n        return unless ignore_nick(m.user.nick).nil?\r\n        begin\r\n        \t            \r\n            factoid = Factoid.first :key => key.downcase\r\n            if factoid.nil?\r\n                m.reply \"FactoidDB | No factoid found for key #{key.downcase}\", true\r\n            else        \r\n                m.reply \"FactoidDB | #{factoid.key) | #{factoid.factoid_values.all.sample}\", true\r\n            end\r\n    \trescue Exception => x\r\n            error x.message\r\n            error x.backtrace.inspect\r\n\t\t\tm.reply \"FactoidDB | Error | #{x.message}\"\r\n\t\tend\r\n    end\r\n    \r\n    match /fact(?:oid)? get (."],[0,"+)$/i, m"]],"start1":761,"start2":761,"length1":18,"length2":704},{"diffs":[[0,":oid)? ("],[-1,"\\S"],[1,"."],[0,"+)$/i, m"]],"start1":1501,"start2":1501,"length1":18,"length2":17},{"diffs":[[0,"dd ("],[-1,"\\S+)\\s+(\\S"],[1,".+?)\\s*\\|\\s*(."],[0,"+)$/"]],"start1":2159,"start2":2159,"length1":18,"length2":22},{"diffs":[[0,"oid."],[1,"factoid_"],[0,"value"],[1,"s"],[0," = "],[-1,"value\r\n            factoid.save"],[1,"factoid.factoid_values.first_or_create :value => value\r\n            m.reply \"FactoidDB | Added: #{key} => #{value}\""],[0,"\r\n  "]],"start1":2415,"start2":2415,"length1":47,"length2":140}]],"length":3436,"saved":false}
{"contributors":[],"silentsave":false,"ts":1368551915482,"patch":[[{"diffs":[[0,"et all ("],[-1,"\\S"],[1,"."],[0,"+)$/i, m"]],"start1":96,"start2":96,"length1":18,"length2":17},{"diffs":[[0,"lFactoid(m, "],[-1,"key"],[1,"name"],[0,")\r\n    retur"]],"start1":148,"start2":148,"length1":27,"length2":28},{"diffs":[[0,"toid.first :"],[-1,"key => key"],[1,"name => name"],[0,".downcase\r\n "]],"start1":279,"start2":279,"length1":34,"length2":36},{"diffs":[[0,"found for key #{"],[-1,"key"],[1,"name"],[0,".downcase}\", tru"]],"start1":391,"start2":391,"length1":35,"length2":36},{"diffs":[[0,"dDB | #{factoid."],[-1,"key"],[1,"name"],[0,") | #{factoid.fa"]],"start1":487,"start2":487,"length1":35,"length2":36},{"diffs":[[0,"lues.all"],[1,"(:fields=>[:value])"],[0,".join(\" "]],"start1":531,"start2":531,"length1":16,"length2":35},{"diffs":[[0,"\\/(\\"],[-1,"S"],[1,"."],[0,"+)\\/"],[1,"$"],[0,"/i,m"]],"start1":796,"start2":796,"length1":13,"length2":14},{"diffs":[[0,"toid(m, "],[-1,"key"],[1,"name"],[0,", regex)"]],"start1":859,"start2":859,"length1":19,"length2":20},{"diffs":[[0,"toid.first :"],[-1,"key => key"],[1,"name => name"],[0,".downcase\r\n "]],"start1":997,"start2":997,"length1":34,"length2":36},{"diffs":[[0,"found for key #{"],[-1,"key"],[1,"name"],[0,".downcase}\", tru"]],"start1":1109,"start2":1109,"length1":35,"length2":36},{"diffs":[[0,"  else        \r\n"],[1,"                ans = factoid.factoid_values.all(:value.like => \"%#{regex}%\", :fields=>[:value])\r\n"],[0,"                "]],"start1":1158,"start2":1158,"length1":32,"length2":130},{"diffs":[[0,"oid."],[-1,"key"],[1,"name"],[0,") | #{"],[-1,"factoid.factoid_values.all.sample"],[1,"ans.join(\" || \")"],[0,"}\", "]],"start1":1315,"start2":1315,"length1":50,"length2":34},{"diffs":[[0,"toid(m, "],[-1,"key"],[1,"name"],[0,")\r\n     "]],"start1":1662,"start2":1662,"length1":19,"length2":20},{"diffs":[[0,".first :"],[-1,"key => key"],[1,"name => name"],[0,".downcas"]],"start1":1794,"start2":1794,"length1":26,"length2":28},{"diffs":[[0,"r key #{"],[-1,"key"],[1,"name"],[0,".downcas"]],"start1":1910,"start2":1910,"length1":19,"length2":20},{"diffs":[[0,"factoid."],[-1,"key"],[1,"name"],[0,") | #{fa"]],"start1":2006,"start2":2006,"length1":19,"length2":20},{"diffs":[[0,"l.sample"],[1,".value"],[0,"}\", true"]],"start1":2049,"start2":2049,"length1":16,"length2":22},{"diffs":[[0,"toid(m, "],[-1,"key"],[1,"name"],[0,", value)"]],"start1":2340,"start2":2340,"length1":19,"length2":20},{"diffs":[[0,"    "],[-1,"key = key"],[1,"name = name"],[0,".dow"]],"start1":2438,"start2":2438,"length1":17,"length2":19},{"diffs":[[0,"te :"],[-1,"key => key"],[1,"name => name"],[0,"\r\n  "]],"start1":2507,"start2":2507,"length1":18,"length2":20},{"diffs":[[0,"dded: #{"],[-1,"key"],[1,"name"],[0,"} => #{v"]],"start1":2652,"start2":2652,"length1":19,"length2":20},{"diffs":[[0,"    "],[1,"\r\n"],[0,"    "],[-1,"\r\n    match /lift (?:remove|rm) (\\w+)"],[1,"match /fact(?:oid)? protect (.+)/i, method :protectFactoid\r\n    def protectFactoid(m, name)\r\n        return unless ignore_nick(m.user.nick).nil?\r\n        begin\r\n            factoid = Factoid.first :name => name.downcase\r\n            if factoid.nil?\r\n                raise \"Factoid does not exist\"\r\n            else\r\n                factoid.protect = true\r\n                factoid.save\r\n            end\r\n        rescue Exception => x\r\n            error x.message\r\n            error x.backtrace.inspect\r\n            m.reply \"FactoidDB | Error | #{x.message}\"\r\n        end\r\n    end\r\n    \r\n    match /fact(?:oid)? (?:remove|rm) (.+?) \\s*\\/(.+)\\/"],[0,"/i, "]],"start1":2857,"start2":2857,"length1":49,"length2":655},{"diffs":[[0," :remove"],[-1,"Lift"],[1,"SpecificFactoid"],[0,"\r\n    de"]],"start1":3519,"start2":3519,"length1":20,"length2":31},{"diffs":[[0,"move"],[-1,"Lift(m, lift"],[1,"SpecificFactoid(m, name, regex"],[0,")\r\n "]],"start1":3554,"start2":3554,"length1":20,"length2":38},{"diffs":[[0,"    "],[-1,"nick = Nick.first_or_create :nick => m.user.nick.downcase\r\n            lift = nick.lifts.first( :lift => lift"],[1,"factoid = Factoid.first :name => name.downcase\r\n            if factoid.nil?\r\n                raise \"Factoid does not exist\"\r\n            else\r\n                if factoid.protect\r\n                    if not check_admin(m.user)\r\n                        m.reply \"FactoidDB | Can't delete from #{factoid.name}: factoid protected\"\r\n                        return\r\n                    end\r\n                end\r\n                val = factoid.factoid_values.first(:value.like => \"%#{regex}%\")\r\n                val.destroy\r\n                m.reply \"FactoidDB | Deleted factoid: #{factoid.name} => #{val.value}\", true\r\n            end\r\n        rescue Exception => x\r\n            error x.message\r\n            error x.backtrace.inspect\r\n            m.reply \"FactoidDB | Error | #{x.message}\"\r\n        end\r\n    end\r\n        \r\n    match /fact(?:oid)? (?:remove|rm) (.+)/i, method: :removeFactoid\r\n    def removeFactoid(m, name)\r\n        return unless ignore_nick(m.user.nick).nil?\r\n        \r\n        begin\r\n            factoid = Factoid.first :name => name"],[0,".dow"]],"start1":3677,"start2":3677,"length1":117,"length2":1050},{"diffs":[[0,"case"],[-1," )"],[0,"\r\n  "]],"start1":4728,"start2":4728,"length1":10,"length2":8},{"diffs":[[0,"     if "],[-1,"lift"],[1,"factoid"],[0,".nil?\r\n "]],"start1":4741,"start2":4741,"length1":20,"length2":23},{"diffs":[[0," raise \""],[-1,"Lift"],[1,"Factoid"],[0," does no"]],"start1":4778,"start2":4778,"length1":20,"length2":23},{"diffs":[[0,"    "],[-1,"l"],[0,"if"],[-1,"t.destroy\r\n"],[1," factoid.protect\r\n                    if not check_admin(m.user)\r\n     "],[0,"    "]],"start1":4841,"start2":4841,"length1":22,"length2":81},{"diffs":[[0,"                "],[1,"   "],[0,"m.reply \"LiftTra"]],"start1":4918,"start2":4918,"length1":32,"length2":35},{"diffs":[[0,"ly \""],[-1,"LiftTracker | Deleted lift: #{lift.lift"],[1,"FactoidDB | Can't delete #{factoid.name}: factoid protected\"\r\n                        return\r\n                    end\r\n                end\r\n                factoid.destroy\r\n                m.reply \"FactoidDB | Deleted factoid: #{factoid.name"],[0,"}\", "]],"start1":4942,"start2":4942,"length1":47,"length2":249},{"diffs":[[0,"ly \""],[-1,"LiftTracker"],[1,"FactoidDB"],[0," | E"]],"start1":5327,"start2":5327,"length1":19,"length2":17}]],"length":5397,"saved":false}
{"ts":1368552304824,"patch":[[{"diffs":[[0,")$/i, method"],[1,":"],[0," :getAllFact"]],"start1":106,"start2":106,"length1":24,"length2":25},{"diffs":[[0,":getAllFactoid\r\n"],[-1,""],[0,"    def getAllFa"]],"start1":120,"start2":120,"length1":32,"length2":32},{"diffs":[[0,"\\/$/i,method"],[1,":"],[0," :getSpecifi"]],"start1":804,"start2":804,"length1":24,"length2":25},{"diffs":[[0,", method"],[1,":"],[0," :getFac"]],"start1":1574,"start2":1574,"length1":16,"length2":17},{"diffs":[[0,"\n    end\r\n    \r\n"],[-1,""],[0,"    match /fact("]],"start1":2850,"start2":2850,"length1":32,"length2":32},{"diffs":[[0,", method"],[1,":"],[0," :protec"]],"start1":2904,"start2":2904,"length1":16,"length2":17}]],"length":5401,"saved":false}
{"ts":1368552386954,"patch":[[{"diffs":[[0,"| #{factoid.name"],[-1,")"],[1,"}"],[0," | #{factoid.fac"]],"start1":492,"start2":492,"length1":33,"length2":33}]],"length":5401,"saved":false}
{"ts":1368552432925,"patch":[[{"diffs":[[0,"factoid.name"],[-1,")"],[1,"}"],[0," | #{ans.joi"]],"start1":1313,"start2":1313,"length1":25,"length2":25},{"diffs":[[0,"oid.name"],[-1,")"],[1,"}"],[0," | #{fac"]],"start1":2013,"start2":2013,"length1":17,"length2":17}]],"length":5401,"saved":false}
{"ts":1368552605015,"patch":[[{"diffs":[[0,"id\r\n"],[-1,"    match /fact(?:oid)? (.+)$/i, method: :getFactoid\r\n"],[0,"    "]],"start1":1593,"start2":1593,"length1":62,"length2":8},{"diffs":[[0,"end\r\n   "],[1,"match /fact(?:oid)? (.+)$/i, method: :getFactoid"],[0," \r\nend"]],"start1":5333,"start2":5333,"length1":14,"length2":62}]],"length":5395,"saved":false}
{"ts":1368552606199,"patch":[[{"diffs":[[0,"   end\r\n"],[1,"    \r\n"],[0,"   match"]],"start1":5330,"start2":5330,"length1":16,"length2":22}]],"length":5401,"saved":false}
{"ts":1368552615238,"patch":[[{"diffs":[[0,"Factoid "],[1,"#down here to see if it's given lowest priority"],[0,"\r\nend"]],"start1":5388,"start2":5388,"length1":13,"length2":60}]],"length":5448,"saved":false}
{"ts":1368552700340,"patch":[[{"diffs":[[0,"  \r\n"],[-1,"   match /fact(?:oid)? (.+)$/i, method: :getFactoid #down here to see if it's given lowest priority\r\n"],[0,"end"]],"start1":5340,"start2":5340,"length1":108,"length2":7}]],"length":5347,"saved":false}
{"ts":1368552834985,"patch":[[{"diffs":[[0,"    "],[-1," factoid.factoid_values ="],[0," fac"]],"start1":2481,"start2":2481,"length1":33,"length2":8}]],"length":5322,"saved":false}
{"ts":1368552908166,"patch":[[{"diffs":[[0,"id)? get"],[-1," "],[0,"all (.+)"]],"start1":90,"start2":90,"length1":17,"length2":16}]],"length":5321,"saved":false}
{"ts":1368552950719,"patch":[[{"diffs":[[0,"id)? get"],[1," "],[0,"all (.+)"]],"start1":90,"start2":90,"length1":16,"length2":17},{"diffs":[[0,"?:oid)? get "],[1,"(?!all)"],[0,"(.+) \\/(\\.+)"]],"start1":780,"start2":780,"length1":24,"length2":31}]],"length":5329,"saved":false}
{"ts":1368553168665,"patch":[[{"diffs":[[0," || \")}\", true\r\n"],[1,"                debug factoid.factoid_values.all(:fields=>[:value]).inspect\r\n"],[0,"            end\r"]],"start1":566,"start2":566,"length1":32,"length2":109}]],"length":5406,"saved":false}
{"ts":1368553230919,"patch":[[{"diffs":[[0,"get "],[-1,"(?!all)"],[0,"(.+)"]],"start1":865,"start2":865,"length1":15,"length2":8},{"diffs":[[0,"?:oid)? get "],[1,"(?!all)"],[0,"(.+)$/i, met"]],"start1":1632,"start2":1632,"length1":24,"length2":31}]],"length":5406,"saved":false}
{"ts":1368553431077,"patch":[[{"diffs":[[0,"value])."],[1,"to_a."],[0,"join(\" |"]],"start1":552,"start2":552,"length1":16,"length2":21}]],"length":5411,"saved":false}
{"ts":1368553580373,"patch":[[{"diffs":[[0,"t (?!all"],[1,"|\\/"],[0,")(.+)$/i"]],"start1":1647,"start2":1647,"length1":16,"length2":19}]],"length":5414,"saved":false}
{"ts":1368553793299,"patch":[[{"diffs":[[0,"    "],[-1,"m.reply \"FactoidDB | #{factoid.name} | #{"],[1,"values = "],[0,"fact"]],"start1":469,"start2":469,"length1":49,"length2":17},{"diffs":[[0,"e])."],[-1,"to_a"],[1,"each { |val| << val.value }\r\n                m.reply \"FactoidDB | #{factoid.name} | #{values"],[0,".joi"]],"start1":524,"start2":524,"length1":12,"length2":100}]],"length":5470,"saved":false}
{"ts":1368553814853,"patch":[[{"diffs":[[0," { |val|"],[1," values"],[0," << val."]],"start1":532,"start2":532,"length1":16,"length2":23}]],"length":5477,"saved":false}
{"ts":1368553888082,"patch":[[{"diffs":[[0,"values ="],[1," []\r\n               "],[0," factoid"]],"start1":473,"start2":473,"length1":16,"length2":36}]],"length":5497,"saved":false}
{"ts":1368553961977,"patch":[[{"diffs":[[0,"!all"],[-1,"|\\/"],[0,")(.+)"],[1,"[^\\/]"],[0,"$/i,"]],"start1":1734,"start2":1734,"length1":16,"length2":18}]],"length":5499,"saved":false}
{"ts":1368553973327,"patch":[[{"diffs":[[0,"!all)(.+"],[1,"?"],[0,")[^\\/]$/"]],"start1":1734,"start2":1734,"length1":16,"length2":17}]],"length":5500,"saved":false}
{"ts":1368554084781,"patch":[[{"diffs":[[0,".+) "],[1,"["],[0,"\\/"],[1,"]"],[0,"(\\.+)"],[1,"["],[0,"\\/"],[1,"]"],[0,"$/i,"]],"start1":958,"start2":958,"length1":17,"length2":21}]],"length":5504,"saved":false}
{"ts":1368554148923,"patch":[[{"diffs":[[0,"(\\.+"],[-1,")"],[0,"[\\/]"],[1,")"],[0,"$/i,"]],"start1":966,"start2":966,"length1":13,"length2":13}]],"length":5504,"saved":false}
{"ts":1368554158424,"patch":[[{"diffs":[[0,"(\\.+"],[1,")"],[0,"[\\/]"],[-1,")"],[0,"$/i,"]],"start1":966,"start2":966,"length1":13,"length2":13}]],"length":5504,"saved":false}
{"ts":1368554167000,"patch":[[{"diffs":[[0,"(.+?"],[-1,")"],[0,"[^\\/]"],[1,")"],[0,"$/i,"]],"start1":1743,"start2":1743,"length1":14,"length2":14}]],"length":5504,"saved":false}
{"ts":1368554328192,"patch":[[{"diffs":[[0,"d found for key "],[1,"'"],[0,"#{name.downcase}"]],"start1":390,"start2":390,"length1":32,"length2":33},{"diffs":[[0,"#{name.downcase}"],[1,"'"],[0,"\", true\r\n       "]],"start1":407,"start2":407,"length1":32,"length2":33},{"diffs":[[0," (.+"],[1,"?"],[0,") "],[-1,"["],[0,"\\/"],[-1,"]"],[0,"(\\.+)"],[-1,"["],[0,"\\/"],[-1,"]"],[0,"$/i,"]],"start1":958,"start2":958,"length1":23,"length2":20},{"diffs":[[0,"d found for key "],[1,"'"],[0,"#{name.downcase}"]],"start1":1277,"start2":1277,"length1":32,"length2":33},{"diffs":[[0,"#{name.downcase}"],[1,"'"],[0,"\", true\r\n       "]],"start1":1294,"start2":1294,"length1":32,"length2":33},{"diffs":[[0,"for key "],[1,"'"],[0,"#{name.d"]],"start1":2040,"start2":2040,"length1":16,"length2":17},{"diffs":[[0,"owncase}"],[1,"'"],[0,"\", true\r"]],"start1":2057,"start2":2057,"length1":16,"length2":17},{"diffs":[[0,"ed: "],[1,"'"],[0,"#{name}"],[1,"'"],[0," => "],[1,"'"],[0,"#{value}"],[1,"'"],[0,"\"\r\n "]],"start1":2763,"start2":2763,"length1":27,"length2":31},{"diffs":[[0,"te from "],[1,"'"],[0,"#{factoi"]],"start1":4077,"start2":4077,"length1":16,"length2":17},{"diffs":[[0,"'#{factoid.name}"],[1,"'"],[0,": factoid protec"]],"start1":4085,"start2":4085,"length1":32,"length2":33},{"diffs":[[0,"eleted factoid: "],[1,"'"],[0,"#{factoid.name} "]],"start1":4350,"start2":4350,"length1":32,"length2":33},{"diffs":[[0,"id.name}"],[1,"'"],[0," => "],[1,"'"],[0,"#{val.va"]],"start1":4374,"start2":4374,"length1":20,"length2":22},{"diffs":[[0,"#{val.value}"],[1,"'"],[0,"\", true\r\n   "]],"start1":4388,"start2":4388,"length1":24,"length2":25},{"diffs":[[0," delete "],[1,"'"],[0,"#{factoi"]],"start1":5083,"start2":5083,"length1":16,"length2":17},{"diffs":[[0,"id.name}"],[1,"'"],[0,": factoi"]],"start1":5099,"start2":5099,"length1":16,"length2":17},{"diffs":[[0,"actoid: "],[1,"'"],[0,"#{factoi"]],"start1":5287,"start2":5287,"length1":16,"length2":17},{"diffs":[[0,"id.name}"],[1,"'"],[0,"\", true\r"]],"start1":5303,"start2":5303,"length1":16,"length2":17}]],"length":5521,"saved":false}
{"ts":1368554433916,"patch":[[{"diffs":[[0,".+?) \\/("],[-1,"\\"],[0,".+)\\/$/i"]],"start1":960,"start2":960,"length1":17,"length2":16}]],"length":5520,"saved":false}
{"ts":1368554468020,"patch":[[{"diffs":[[0,"move|rm) (.+"],[1,"[^\\/]"],[0,")/i, method:"]],"start1":4642,"start2":4642,"length1":24,"length2":29}]],"length":5525,"saved":false}
{"ts":1368554541317,"patch":[[{"diffs":[[0,"|rm) (.+"],[1,"?"],[0,"[^\\/])/i"]],"start1":4646,"start2":4646,"length1":16,"length2":17}]],"length":5526,"saved":false}
{"ts":1368554591153,"patch":[[{"diffs":[[0,"_values."],[-1,"all"],[1,"first"],[0,"(:value."]],"start1":1382,"start2":1382,"length1":19,"length2":21},{"diffs":[[0,"x}%\""],[-1,", :fields=>[:"],[1,")."],[0,"value"],[-1,"])"],[0,"\r\n  "]],"start1":1419,"start2":1419,"length1":28,"length2":15},{"diffs":[[0," | #{ans"],[-1,".join(\" || \")"],[0,"}\", true"]],"start1":1484,"start2":1484,"length1":29,"length2":16}]],"length":5502,"saved":false}
{"ts":1368554667566,"patch":[[{"diffs":[[0,"}%\").value\r\n"],[1,"                if ans.nil?\r\n                    m.reply \"FactoidDB | No factoid found containing '#{regex}' in key '#{name.downcase}'\"\r\n                else\r\n    "],[0,"            "]],"start1":1420,"start2":1420,"length1":24,"length2":187},{"diffs":[[0," #{ans}\", true\r\n"],[1,"                end\r\n"],[0,"            end\r"]],"start1":1649,"start2":1649,"length1":32,"length2":53}]],"length":5686,"saved":false}
{"ts":1368554735065,"patch":[[{"diffs":[[0,"egex}%\")"],[-1,".value"],[0,"\r\n      "]],"start1":1416,"start2":1416,"length1":22,"length2":16},{"diffs":[[0," | #{ans"],[1,".value"],[0,"}\", true"]],"start1":1641,"start2":1641,"length1":16,"length2":22}]],"length":5686,"saved":false}
{"ts":1368555006397,"patch":[[{"diffs":[[0,"d.save\r\n"],[1,"                m.reply \"FactoidDB | Protected factoid '#{factoid.name}'\"\r\n"],[0,"        "]],"start1":3518,"start2":3518,"length1":16,"length2":91}]],"length":5762,"saved":false}
{"ts":1368555027368,"patch":[[{"diffs":[[0,"\n    end\r\n    \r\n"],[1,"match /fact(?:oid)? unprotect (.+)/i, method: :unprotectFactoid\r\n    def unprotectFactoid(m, name)\r\n        return unless ignore_nick(m.user.nick).nil?\r\n        begin\r\n            factoid = Factoid.first :name => name.downcase\r\n            if factoid.nil?\r\n                raise \"Factoid does not exist\"\r\n            else\r\n                factoid.protect = false\r\n                factoid.save\r\n                m.reply \"FactoidDB | Protected factoid '#{factoid.name}'\"\r\n            end\r\n        rescue Exception => x\r\n            error x.message\r\n            error x.backtrace.inspect\r\n            m.reply \"FactoidDB | Error | #{x.message}\"\r\n        end\r\n    end\r\n    \r\n"],[0,"    match /fact("]],"start1":3785,"start2":3785,"length1":32,"length2":701}]],"length":6431,"saved":false}
{"ts":1368555036715,"patch":[[{"diffs":[[0,"FactoidDB | "],[-1,"Protected"],[1,"Removed protection for"],[0," factoid '#{"]],"start1":4220,"start2":4220,"length1":33,"length2":46}]],"length":6444,"saved":false}
{"ts":1368555085428,"patch":[[{"diffs":[[0,"ctoid = Factoid."],[-1,"first"],[1,"all"],[0," :name => name.d"]],"start1":5731,"start2":5731,"length1":37,"length2":35}]],"length":6442,"saved":false}
{"ts":1368555203481,"patch":[[{"diffs":[[0,"Factoid."],[-1,"all"],[1,"first"],[0," :name ="]],"start1":5739,"start2":5739,"length1":19,"length2":21},{"diffs":[[0,"        "],[-1,"f"],[1,"F"],[0,"actoid."],[1,"all(:name => name.downcase)."],[0,"destroy\r"]],"start1":6139,"start2":6139,"length1":24,"length2":52}]],"length":6472,"saved":false}
{"ts":1368555437270,"patch":[[{"diffs":[[0,"    "],[-1,"F"],[1,"f"],[0,"actoid."],[-1,"all(:name => name.downcase)"],[1,"factoid_values.all.destroy\r\n                factoid"],[0,".des"]],"start1":6143,"start2":6143,"length1":43,"length2":67}]],"length":6496,"saved":false}
{"ts":1368555442743,"patch":[[{"diffs":[[0,"actoid.destroy\r\n"],[1,"                factoid.save\r\n"],[0,"                "]],"start1":6200,"start2":6200,"length1":32,"length2":62}]],"length":6526,"saved":false}
{"ts":1368555627777,"patch":[[{"diffs":[[0,"oy\r\n"],[-1,"                factoid.save\r\n"],[0,"    "]],"start1":6212,"start2":6212,"length1":38,"length2":8}]],"length":6496,"saved":false}
{"ts":1368555934347,"patch":[[{"diffs":[[0,"::Plugin\r\n    \r\n"],[1,"    listen_to :channel\r\n    def listen(m)\r\n        unless m.message =~ /^\\./ || $SHUTUP\r\n            factoid = \r\n        end\r\n    end\r\n    \r\n"],[0,"    match /fact("]],"start1":55,"start2":55,"length1":32,"length2":173}]],"length":6637,"saved":false}
{"ts":1368556088691,"patch":[[{"diffs":[[0,"\n    end\r\n    \r\n"],[1,"    match /factoid (on|off)/i, method: :quiet\r\n    def quiet(m, quiet)\r\n        case quiet\r\n        when /on/i\r\n            $SHUTUP = true\r\n        when /off/i\r\n            $SHUTUP = false\r\n        end\r\n    end\r\n    \r\n"],[0,"    match /fact("]],"start1":196,"start2":196,"length1":32,"length2":250}]],"length":6855,"saved":false}
{"ts":1368556096139,"patch":[[{"diffs":[[0," when /o"],[-1,"n"],[1,"ff"],[0,"/i\r\n    "]],"start1":311,"start2":311,"length1":17,"length2":18},{"diffs":[[0,"\n        when /o"],[-1,"ff"],[1,"n"],[0,"/i\r\n            "]],"start1":352,"start2":352,"length1":34,"length2":33}]],"length":6855,"saved":false}
{"ts":1368556195415,"patch":[[{"diffs":[[0,"        "],[-1,"factoid = "],[1,"return unless ignore_nick(m.user.nick).nil?\r\n            begin\r\n            \t            \r\n                factoid = Factoid.first :name => m.downcase\r\n                if !factoid.nil?\r\n                    m.reply \"#{factoid.factoid_values.all.sample.value}\", false\r\n                end\r\n        \trescue Exception => x\r\n                error x.message\r\n                error x.backtrace.inspect\r\n    \t\t\t#m.reply \"FactoidDB | Error | #{x.message}\"\r\n    \t\tend"],[0,"\r\n      "]],"start1":164,"start2":164,"length1":26,"length2":473}]],"length":7302,"saved":false}
{"ts":1368556268297,"patch":[[{"diffs":[[0,"me => m."],[1,"message."],[0,"downcase"]],"start1":306,"start2":306,"length1":16,"length2":24}]],"length":7310,"saved":false}
{"ts":1368556350699,"patch":[[{"diffs":[[0,".reply \""],[1,"#{factoid.name} is "],[0,"#{factoi"]],"start1":387,"start2":387,"length1":16,"length2":35},{"diffs":[[0,"$SHUTUP = true\r\n"],[1,"            m.reply \"\"\r\n"],[0,"        when /on"]],"start1":811,"start2":811,"length1":32,"length2":56}]],"length":7353,"saved":false}
{"ts":1368556369595,"patch":[[{"diffs":[[0,".reply \""],[1,"FactoidDB | Automatic replies turned off"],[0,"\"\r\n     "]],"start1":840,"start2":840,"length1":16,"length2":56},{"diffs":[[0,"SHUTUP = false\r\n"],[1,"            m.reply \"FactoidDB | Automatic replies turned on\"\r\n"],[0,"        end\r\n   "]],"start1":924,"start2":924,"length1":32,"length2":95}]],"length":7456,"saved":false}
{"ts":1368556500082,"patch":[[{"diffs":[[0,"ugin\r\n    \r\n"],[1,"    $PROTECT = false\r\n    \r\n"],[0,"    listen_t"]],"start1":59,"start2":59,"length1":24,"length2":52},{"diffs":[[0," (on|off"],[1,"|!?gprotect"],[0,")/i, met"]],"start1":732,"start2":732,"length1":16,"length2":27},{"diffs":[[0,"ed on\"\r\n"],[1,"        when /gprotect/i\r\n            $PROTECT = true\r\n            m.reply \"FactoidDB | Only admins can add factoids\"\r\n        when /!gprotect/i\r\n            $PROTECT = false\r\n            m.reply \"FactoidDB | Everyone can add factoids\"\r\n"],[0,"        "]],"start1":1034,"start2":1034,"length1":16,"length2":253}]],"length":7732,"saved":false}
{"ts":1368556562731,"patch":[[{"diffs":[[0,"alse\r\n    \r\n"],[1,"    def protect\r\n        return $PROTECT\r\n    end\r\n    \r\n    def shutup\r\n        return $SHUTUP\r\n    end\r\n    \r\n"],[0,"    listen_t"]],"start1":87,"start2":87,"length1":24,"length2":136}]],"length":7844,"saved":false}
{"ts":1368556651362,"patch":[[{"diffs":[[0,"ser.nick).nil?\r\n"],[1,"    return unless !protect and !shutup\r\n"],[0,"        begin\r\n "]],"start1":1549,"start2":1549,"length1":32,"length2":72},{"diffs":[[0,"ser.nick).nil?\r\n"],[1,"        return unless check_admin(m.user)\r\n"],[0,"        begin\r\n "]],"start1":4658,"start2":4658,"length1":32,"length2":75},{"diffs":[[0,"ser.nick).nil?\r\n"],[1,"        return unless check_admin(m.user)\r\n"],[0,"        begin\r\n "]],"start1":5369,"start2":5369,"length1":32,"length2":75}]],"length":7970,"saved":false}
{"ts":1368556791948,"patch":[[{"diffs":[[0,"urn "],[-1,"$PROTECT\r\n    end\r\n    \r\n    def shutup"],[1,"false if check_admin(m.user)\r\n        return $PROTECT\r\n    end\r\n    \r\n    def shutup\r\n        return false if check_admin(m.user)"],[0,"\r\n  "]],"start1":127,"start2":127,"length1":47,"length2":137},{"diffs":[[0,"quiet)\r\n"],[1,"        return unless check_admin(m.user)\r\n"],[0,"        "]],"start1":991,"start2":991,"length1":16,"length2":59},{"diffs":[[0,"!protect"],[1,"(m.user)"],[0," and !sh"]],"start1":1716,"start2":1716,"length1":16,"length2":24},{"diffs":[[0," and !shutup"],[1,"(m.user)"],[0,"\r\n        be"]],"start1":1732,"start2":1732,"length1":24,"length2":32},{"diffs":[[0,"ser.nick).nil?\r\n"],[1,"        return unless !protect(m.user) and !shutup(m.user)\r\n"],[0,"        begin\r\n "]],"start1":2624,"start2":2624,"length1":32,"length2":92},{"diffs":[[0,"ser.nick).nil?\r\n"],[1,"        return unless !protect(m.user) and !shutup(m.user)\r\n"],[0,"        begin\r\n "]],"start1":3602,"start2":3602,"length1":32,"length2":92},{"diffs":[[0,"ser.nick).nil?\r\n"],[1,"        return unless !protect(m.user) and !shutup(m.user)\r\n"],[0,"        begin\r\n "]],"start1":4349,"start2":4349,"length1":32,"length2":92},{"diffs":[[0,"ser.nick).nil?\r\n"],[1,"        return unless !protect(m.user) and !shutup(m.user)\r\n"],[0,"        \r\n      "]],"start1":6461,"start2":6461,"length1":32,"length2":92},{"diffs":[[0,".user.nick).nil?"],[-1,""],[0,""],[1,"\r\n        return unless !protect(m.user) and !shutup(m.user)"],[0,"\r\n        \r\n    "]],"start1":7537,"start2":7537,"length1":32,"length2":92}]],"length":8419,"saved":false}
{"ts":1368556841884,"patch":[[{"diffs":[[0,"ly \""],[-1,"#{factoid.name} is "],[0,"#{fa"]],"start1":621,"start2":621,"length1":27,"length2":8}]],"length":8400,"saved":false}
{"ts":1368556963736,"patch":[[{"diffs":[[0,"off|"],[-1,"!?g"],[1,"gprotect|n"],[0,"prot"]],"start1":920,"start2":920,"length1":11,"length2":18}]],"length":8407,"saved":false}
{"contributors":[],"silentsave":false,"ts":1368557922786,"patch":[[{"diffs":[[0," def protect"],[1,"(user)"],[0,"\r\n        re"]],"start1":102,"start2":102,"length1":24,"length2":30},{"diffs":[[0," if check_admin("],[-1,"m."],[0,"user)\r\n        r"]],"start1":142,"start2":142,"length1":34,"length2":32},{"diffs":[[0,"f shutup"],[1,"(user)"],[0,"\r\n      "]],"start1":211,"start2":211,"length1":16,"length2":22},{"diffs":[[0," if check_admin("],[-1,"m."],[0,"user)\r\n        r"]],"start1":247,"start2":247,"length1":34,"length2":32},{"diffs":[[0,"+?[^\\/])"],[1,"$"],[0,"/i, meth"]],"start1":7429,"start2":7429,"length1":16,"length2":17}]],"length":8415,"saved":false}
