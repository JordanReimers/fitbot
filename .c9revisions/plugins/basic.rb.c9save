{"ts":1358959242377,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1358959102957,"patch":[[{"diffs":[[1,"class Basic\r\n    include Cinch::Plugin\r\n\r\n\t# Identify with Nickserv then join channels\r\n\tlisten_to :connect, method: :identify\r\n\tdef identify(m)\r\n\t\tUser(\"nickserv\").send(\"identify #{$BOTPASSWORD}\")\r\n\t\tsleep 1 # Wait for hostserv to kick in\r\n\t\tJoinDB.all.each do |this|\r\n\t\t\tChannel(this.channel).join\r\n\t\t\tsleep 1\r\n\t\tend\r\n\tend\r\n\r\n\t# Rename when nick becomes available\r\n\tlisten_to :quit, method: :rename\r\n\tdef rename(m)\r\n\t\tif m.user.nick == $BOTNICK\r\n\t\t\t@bot.nick = $BOTNICK\r\n\t\t\tUser(\"nickserv\").send(\"identify #{$BOTPASSWORD}\")\r\n\t\tend\r\n\tend\r\n\r\n\t# Rejoin channel if kicked\r\n\tlisten_to :kick\r\n\tdef listen(m)\r\n\t\treturn unless m.params[1] == @bot.nick\r\n\t\tsleep 2\r\n\t\tChannel(m.channel.name).join(m.channel.key)\r\n\tend\r\n\r\n\tmatch /help$/i, method: :help\r\n\tdef help(m)\r\n\t\tm.reply \"Function list: \u000312\u001f#{$BOTURL}\u000f Source: \u000312\u001f#{$BOTGIT}\u000f Need more help? Fuck off\", true\r\n\tend\r\n\r\nend"]],"start1":0,"start2":0,"length1":0,"length2":869}]],"length":869,"saved":false}
{"contributors":[],"silentsave":false,"ts":1358975454106,"patch":[[{"diffs":[[0,"L}\u000f "],[-1,"Source"],[1,"Owner"],[0,": \u00031"]],"start1":797,"start2":797,"length1":14,"length2":13},{"diffs":[[0,"$BOT"],[-1,"GIT"],[1,"OWNER"],[0,"}\u000f N"]],"start1":814,"start2":814,"length1":11,"length2":13}]],"length":870,"saved":false}
