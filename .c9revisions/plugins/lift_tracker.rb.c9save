{"ts":1360338523233,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1360338397651,"patch":[[{"diffs":[[1,"# encoding: utf-8\r\n\r\nclass LiftTracker\r\n    include Cinch::Plugin\r\n\r\n    match /lift (.+)/i\r\n\tdef execute(m, query)\r\n\t\treturn unless ignore_nick(m.user.nick).nil?\r\n\r\n\t\tbegin\r\n\t\t\toptions = query.split(/\\||or/)\r\n\t\t\tm.reply options[rand(options.length)], true\r\n\t\trescue\r\n\t\t\tm.reply \"\"\r\n\t\tend\r\n\tend\r\nend"]],"start1":0,"start2":0,"length1":0,"length2":299}]],"length":299,"saved":false}
{"ts":1360338417653,"patch":[[{"diffs":[[0,".reply \""],[1,"LiftTracker | Error"],[0,"\"\r\n\t\tend"]],"start1":272,"start2":272,"length1":16,"length2":35}]],"length":318,"saved":false}
{"ts":1360341907603,"patch":[[{"diffs":[[0,"\n\t\t\t"],[-1,"options = query.split(/\\||or/)\r\n\t\t\tm.reply options[rand(options.length)], true"],[1,"nick = Nick.first_or_create :nick => m.user.nick.downcase\r\n            parameters = query.split\r\n            \r\n            case parameters[0]\r\n            when \"add\"\r\n                raise if !parameters[2].is_a? Numeric or !parameters[3].is_a? Numeric\r\n                nick.lifts.first_or_create( :lift => parameters[1] ).update( :weight => parameters[2], :reps => parameters[3] )\r\n                m.reply \"LiftTracker | Added lift: #{parameters[1]}. Weight: #{parameters[2]. Reps: #{parameters[3]||1}\"\r\n            when \"remove\"\r\n                nick.lifts.first( :lift => parameters[1] ).destroy\r\n            else\r\n                m.reply \"LiftTracker | Lifts for #{parameters[0]} | #{nick.lifts.all.join(\"|\")}\", true\r\n            end"],[0,"\r\n\t\t"]],"start1":174,"start2":174,"length1":86,"length2":745}]],"length":977,"saved":false}
{"ts":1360342045478,"patch":[[{"diffs":[[0,"    "],[-1,"else"],[1,"when nil\r\n                m.reply \"LiftTracker | Lifts for #{m.user.nick} | #{nick.lifts.all.join(\"|\")}\", true\r\n            else\r\n                nick = Nick.first_or_create :nick => parameters[0]"],[0,"\r\n  "]],"start1":786,"start2":786,"length1":12,"length2":204}]],"length":1169,"saved":false}
{"ts":1360342213141,"patch":[[{"diffs":[[0,"eters[2]"],[1,"}"],[0,". Reps: "]],"start1":645,"start2":645,"length1":16,"length2":17}]],"length":1170,"saved":false}
{"ts":1360342369617,"patch":[[{"diffs":[[0,"\t\trescue"],[1," Exception => x\r\n            error x.message\r\n            error x.backtrace.inspect"],[0,"\r\n\t\t\tm.r"]],"start1":1110,"start2":1110,"length1":16,"length2":99}]],"length":1253,"saved":false}
{"ts":1360342384924,"patch":[[{"diffs":[[0,"lift"],[1,"(?:"],[0," (.+)"],[1,")?"],[0,"/i\r\n"]],"start1":80,"start2":80,"length1":13,"length2":18}]],"length":1258,"saved":false}
{"ts":1360343148390,"patch":[[{"diffs":[[0,"  raise "],[1,"\"#{parameters.inspect} \""],[0,"if !para"]],"start1":364,"start2":364,"length1":16,"length2":40}]],"length":1282,"saved":false}
{"ts":1360343171369,"patch":[[{"diffs":[[0," | Error"],[1," | #{x.message}"],[0,"\"\r\n\t\tend"]],"start1":1255,"start2":1255,"length1":16,"length2":31}]],"length":1297,"saved":false}
{"ts":1360343262153,"patch":[[{"diffs":[[0,"eric or "],[1,"("],[0,"!paramet"]],"start1":423,"start2":423,"length1":16,"length2":17},{"diffs":[[0," Numeric"],[1," && !parameters[3].nil?)"],[0,"\r\n      "]],"start1":452,"start2":452,"length1":16,"length2":40}]],"length":1322,"saved":false}
{"ts":1360343396366,"patch":[[{"diffs":[[0,"Numeric "],[-1,"or"],[1,"||"],[0," (!param"]],"start1":420,"start2":420,"length1":18,"length2":18}]],"length":1322,"saved":false}
{"ts":1360343692334,"patch":[[{"diffs":[[0,"        "],[1,"#"],[0,"raise \"#"]],"start1":358,"start2":358,"length1":16,"length2":17},{"diffs":[[0,"spect} \""],[1," "],[0,"if !para"]],"start1":389,"start2":389,"length1":16,"length2":17}]],"length":1324,"saved":false}
{"ts":1360343775168,"patch":[[{"diffs":[[0," | #{nick.lifts."],[-1,"all."],[0,"join(\"|\")}\", tru"]],"start1":920,"start2":920,"length1":36,"length2":32},{"diffs":[[0,"fts."],[-1,"all."],[0,"join"]],"start1":1118,"start2":1118,"length1":12,"length2":8}]],"length":1316,"saved":false}
{"ts":1360343844102,"patch":[[{"diffs":[[0,"ry.split"],[1," if !parameters.nil?"],[0,"\r\n      "]],"start1":270,"start2":270,"length1":16,"length2":36}]],"length":1336,"saved":false}
{"ts":1360343865979,"patch":[[{"diffs":[[0,"lit if !"],[-1,"parameters"],[1,"query"],[0,".nil?\r\n "]],"start1":275,"start2":275,"length1":26,"length2":21},{"diffs":[[0," | #{nick.lifts."],[1,"all."],[0,"join(\"|\")}\", tru"]],"start1":935,"start2":935,"length1":32,"length2":36},{"diffs":[[0,"k.lifts."],[1,"all."],[0,"join(\"|\""]],"start1":1133,"start2":1133,"length1":16,"length2":20}]],"length":1339,"saved":false}
{"ts":1360343992797,"patch":[[{"diffs":[[0,"    "],[-1,"\r\n            case parameters[0]"],[1,"command = nil if parameters.nil? else parameters[0]\r\n            \r\n            case command"],[0,"\r\n  "]],"start1":303,"start2":303,"length1":40,"length2":99}]],"length":1398,"saved":false}
{"ts":1360344053222,"patch":[[{"diffs":[[0,"se parameters[0]"],[1," end"],[0,"\r\n            \r\n"]],"start1":342,"start2":342,"length1":32,"length2":36}]],"length":1402,"saved":false}
{"ts":1360344092726,"patch":[[{"diffs":[[0,"nd ="],[-1," nil if"],[0," par"]],"start1":312,"start2":312,"length1":15,"length2":8},{"diffs":[[0,"rs.nil? "],[-1,"else"],[1,"? nil :"],[0," paramet"]],"start1":325,"start2":325,"length1":20,"length2":23},{"diffs":[[0,"eters[0]"],[-1," end"],[0,"\r\n      "]],"start1":346,"start2":346,"length1":20,"length2":16}]],"length":1394,"saved":false}
{"ts":1360344272653,"patch":[[{"diffs":[[0," parameters[0]\r\n"],[1,"                nick.lifts.all { |lift|\r\n                    lifts << \"#{lift.lift}: #{lift.weight}x#{lift.reps}\"\r\n                }\r\n"],[0,"                "]],"start1":1099,"start2":1099,"length1":32,"length2":166},{"diffs":[[0,"0]} | #{"],[-1,"nick."],[0,"lifts."],[-1,"all."],[0,"join(\""],[-1,"|"],[1," | "],[0,"\")}\", tr"]],"start1":1311,"start2":1311,"length1":38,"length2":31}]],"length":1521,"saved":false}
{"ts":1360344331179,"patch":[[{"diffs":[[0," parameters[0]\r\n"],[1,"                lifts = []\r\n"],[0,"                "]],"start1":1099,"start2":1099,"length1":32,"length2":60}]],"length":1549,"saved":false}
{"ts":1360344412749,"patch":[[{"diffs":[[0,"     }\r\n"],[1,"                debug lifts.inspect\r\n"],[0,"        "]],"start1":1269,"start2":1269,"length1":16,"length2":53}]],"length":1586,"saved":false}
{"ts":1360344624372,"patch":[[{"diffs":[[0,"en nil\r\n"],[1,"                lifts = getLifts(nick)\r\n"],[0,"        "]],"start1":919,"start2":919,"length1":16,"length2":56},{"diffs":[[0,"| #{"],[-1,"nick."],[0,"lifts."],[-1,"all."],[0,"join"]],"start1":1031,"start2":1031,"length1":23,"length2":14},{"diffs":[[0,"s = "],[-1,"[]\r\n                nick.lifts.all { |lift|\r\n                    lifts << \"#{lift.lift}: #{lift.weight}x#{lift.reps}\"\r\n                }\r\n                debug lifts.inspect"],[1,"getLifts(nick)"],[0,"\r\n  "]],"start1":1166,"start2":1166,"length1":181,"length2":22},{"diffs":[[0,"\t\tend\r\n\t"],[-1,""],[0,""],[1,"end\r\n    \r\n    def getLifts (nick)\r\n        nick.lifts.all { |lift|\r\n            lifts << \"#{lift.lift}: #{lift.weight}x#{lift.reps}\"\r\n        }\r\n        debug lifts.inspect\r\n    "],[0,"end\r\nend"]],"start1":1442,"start2":1442,"length1":16,"length2":195}]],"length":1637,"saved":false}
{"ts":1360344686371,"patch":[[{"diffs":[[0,"etLifts (nick)\r\n"],[1,"        lifts = []\r\n"],[0,"        nick.lif"]],"start1":1470,"start2":1470,"length1":32,"length2":52},{"diffs":[[0,"nspect\r\n"],[1,"        lifts\r\n"],[0,"    end\r"]],"start1":1637,"start2":1637,"length1":16,"length2":31}]],"length":1672,"saved":false}
{"ts":1360344866434,"patch":[[{"diffs":[[0,"ifts"],[-1,".all"],[0," { |"]],"start1":1520,"start2":1520,"length1":12,"length2":8}]],"length":1668,"saved":false}
{"ts":1360344947175,"patch":[[{"diffs":[[0,"     }\r\n"],[1,"        debug nick\r\n        debug nick.lifts\r\n        debug nick.lifts.all\r\n"],[0,"        "]],"start1":1604,"start2":1604,"length1":16,"length2":92}]],"length":1744,"saved":false}
{"ts":1360345103741,"patch":[[{"diffs":[[0,"bug nick"],[1,".inspect"],[0,"\r\n      "]],"start1":1622,"start2":1622,"length1":16,"length2":24},{"diffs":[[0,"g nick.lifts"],[1,".inspect"],[0,"\r\n        de"]],"start1":1652,"start2":1652,"length1":24,"length2":32},{"diffs":[[0,"ifts.all"],[1,".inspect"],[0,"\r\n      "]],"start1":1694,"start2":1694,"length1":16,"length2":24}]],"length":1768,"saved":false}
{"ts":1360345371601,"patch":[[{"diffs":[[0,"ck.lifts"],[1,".all(:fields=>[:lift, :weight, :reps])"],[0," { |lift"]],"start1":1516,"start2":1516,"length1":16,"length2":54}]],"length":1806,"saved":false}
{"ts":1360345394595,"patch":[[{"diffs":[[0,"ick."],[-1,"inspect\r\n        debug nick.lifts.inspect\r\n        debug nick.lifts.all"],[1,"lifts.all(:fields=>[:lift, :weight, :reps])"],[0,".ins"]],"start1":1665,"start2":1665,"length1":79,"length2":51}]],"length":1778,"saved":false}
{"ts":1360345481901,"patch":[[{"diffs":[[0,"|lift|\r\n"],[1,"            debug lift.inspect\r\n"],[0,"        "]],"start1":1565,"start2":1565,"length1":16,"length2":48}]],"length":1810,"saved":false}
{"ts":1360345545745,"patch":[[{"diffs":[[0," :reps])"],[1,".each"],[0," { |lift"]],"start1":1554,"start2":1554,"length1":16,"length2":21}]],"length":1815,"saved":false}
{"ts":1360345548824,"patch":[[{"diffs":[[0,"t|\r\n"],[-1,"            debug lift.inspect\r\n"],[0,"    "]],"start1":1574,"start2":1574,"length1":40,"length2":8}]],"length":1783,"saved":false}
{"ts":1360345612617,"patch":[[{"diffs":[[0,"], :reps => "],[1,"("],[0,"parameters[3"]],"start1":658,"start2":658,"length1":24,"length2":25},{"diffs":[[0,"eters[3]"],[1,"||1)"],[0," )\r\n    "]],"start1":676,"start2":676,"length1":16,"length2":20}]],"length":1788,"saved":false}
{"ts":1360345681842,"patch":[[{"diffs":[[0,"s.join(\""],[-1,"|"],[1," , "],[0,"\")}\", tr"]],"start1":1044,"start2":1044,"length1":17,"length2":19},{"diffs":[[0,".join(\" "],[-1,"|"],[1,","],[0," \")}\", t"]],"start1":1268,"start2":1268,"length1":17,"length2":17}]],"length":1790,"saved":false}
{"ts":1360345729872,"patch":[[{"diffs":[[0,"=> parameters[0]"],[1,".downcase"],[0,"\r\n              "]],"start1":1135,"start2":1135,"length1":32,"length2":41}]],"length":1799,"saved":false}
{"ts":1360345813829,"patch":[[{"diffs":[[0,"eters[0]"],[1,".downcase"],[0,"\r\n"],[-1,""],[0,"        "]],"start1":346,"start2":346,"length1":18,"length2":27},{"diffs":[[0,"eters[1]"],[1,".downcase"],[0," ).updat"]],"start1":625,"start2":625,"length1":16,"length2":25},{"diffs":[[0,"emove\"\r\n"],[-1,""],[0,"        "]],"start1":852,"start2":852,"length1":16,"length2":16},{"diffs":[[0,"eters[1]"],[1,".downcase"],[0," ).destr"]],"start1":908,"start2":908,"length1":16,"length2":25}]],"length":1826,"saved":false}
{"ts":1360345895029,"patch":[[{"diffs":[[0,"        "],[-1,"#"],[0,"raise \"#"]],"start1":437,"start2":437,"length1":17,"length2":16}]],"length":1825,"saved":false}
{"ts":1360345945985,"patch":[[{"diffs":[[0,"\"remove\""],[1,", \"rm\""],[0,"\r\n      "]],"start1":849,"start2":849,"length1":16,"length2":22},{"diffs":[[0,"| #{lifts.join(\""],[-1," "],[0,", \")}\", true\r\n  "]],"start1":1068,"start2":1068,"length1":33,"length2":32},{"diffs":[[0,"s.join(\""],[-1," "],[0,", \")}\", "]],"start1":1307,"start2":1307,"length1":17,"length2":16}]],"length":1829,"saved":false}
{"ts":1360345986269,"patch":[[{"diffs":[[0,"d\"\r\n"],[-1,"                raise \"#{parameters.inspect} \" if !parameters[2].is_a? Numeric || (!parameters[3].is_a? Numeric && !parameters[3].nil?)\r\n"],[0,"    "]],"start1":425,"start2":425,"length1":145,"length2":8}]],"length":1692,"saved":false}
{"ts":1360346384518,"patch":[[{"diffs":[[0,"[3]||1}\""],[1,", true"],[0,"\r\n"],[-1,""],[0,"        "]],"start1":685,"start2":685,"length1":18,"length2":24},{"diffs":[[0,"\n               "],[1," lift ="],[0," nick.lifts.firs"]],"start1":733,"start2":733,"length1":32,"length2":39},{"diffs":[[0,"se )"],[-1,".destroy"],[1,"\r\n                if lift.nil?\r\n                    raise \"Lift does not exist\"\r\n                else\r\n                    lift.destroy\r\n                    m.reply \"LiftTracker | Deleted lift: #{parameters[1]}\", true\r\n                end"],[0,"\r\n  "]],"start1":804,"start2":804,"length1":16,"length2":246}]],"length":1935,"saved":false}
{"ts":1360346862246,"patch":[[{"diffs":[[0," \"add\"\r\n"],[1,"                case parameter[3]\r\n                when /kgs?|kilo(?:gram)?s?/\r\n                    unit = 'kg'\r\n                when /lbs?|pounds?/\r\n                    unit = 'lb'\r\n                end\r\n"],[0,"        "]],"start1":421,"start2":421,"length1":16,"length2":220},{"diffs":[[0,"ters[2],"],[1," :unit => unit,"],[0," :reps ="]],"start1":736,"start2":736,"length1":16,"length2":31},{"diffs":[[0,"(parameters["],[-1,"3"],[1,"4"],[0,"]||1) )\r\n   "]],"start1":769,"start2":769,"length1":25,"length2":25},{"diffs":[[0,"ters[2]}"],[1,"#{unit}"],[0,". Reps: "]],"start1":876,"start2":876,"length1":16,"length2":23},{"diffs":[[0,"ameters["],[-1,"3"],[1,"4"],[0,"]||1}\", "]],"start1":904,"start2":904,"length1":17,"length2":17}]],"length":2161,"saved":false}
{"ts":1360347018805,"patch":[[{"diffs":[[0,"= Nick.first"],[-1,"_or_create"],[0," :nick => pa"]],"start1":1469,"start2":1469,"length1":34,"length2":24},{"diffs":[[0,"rs[0].downcase\r\n"],[1,"                raise \"No such nick\" if nick.nil?\r\n"],[0,"                "]],"start1":1499,"start2":1499,"length1":32,"length2":83}]],"length":2202,"saved":false}
{"ts":1360347045843,"patch":[[{"diffs":[[0,"arameter"],[1,"s"],[0,"[3]\r\n   "]],"start1":451,"start2":451,"length1":16,"length2":17}]],"length":2203,"saved":false}
{"ts":1360347107488,"patch":[[{"diffs":[[0,"[:lift, :weight,"],[1," :unit,"],[0," :reps]).each { "]],"start1":1958,"start2":1958,"length1":32,"length2":39}]],"length":2210,"saved":false}
{"ts":1360347118305,"patch":[[{"diffs":[[0,".weight}"],[1,"#{lift.unit}"],[0,"x#{lift."]],"start1":2047,"start2":2047,"length1":16,"length2":28}]],"length":2222,"saved":false}
{"ts":1360348228159,"patch":[[{"diffs":[[0,"def "],[-1,"getLifts (nick)\r\n        lifts = []\r\n        nick.lifts.all(:fields=>[:lift, :weight, :unit, :reps]).each { |lift|\r\n            lifts << \"#{lift.lift}: #{lift.weight}#{lift.unit}x#{lift.reps}\""],[1,"to_kg (weight)\r\n        weight / 2.2\r\n    end\r\n    \r\n    def to_lb (weight)\r\n        weight * 2.2\r\n    end\r\n    \r\n    def getLifts (nick, metric = true)\r\n        lifts = []\r\n        nick.lifts.all(:fields=>[:lift, :weight, :unit, :reps]).each { |lift|\r\n        \r\n            if metric\r\n                case lift.unit\r\n                when 'kg'\r\n                    lifts << \"#{lift.lift}: #{lift.weight}#{lift.unit}x#{lift.reps}\"\r\n                when 'lb'\r\n                    lifts << \"#{lift.lift}: #{to_lb(lift.weight)}lbx#{lift.reps}\"\r\n                end\r\n            else\r\n                case lift.unit\r\n                when 'kg'\r\n                    lifts << \"#{lift.lift}: #{to_kg(lift.weight)}kgx#{lift.reps}\"\r\n                when 'lb'\r\n                    lifts << \"#{lift.lift}: #{lift.weight}#{lift.unit}x#{lift.reps}\"\r\n                end\r\n            end"],[0,"\r\n  "]],"start1":1885,"start2":1885,"length1":200,"length2":879}]],"length":2901,"saved":false}
{"ts":1360348252581,"patch":[[{"diffs":[[0,"|lift|\r\n"],[-1,"        \r\n"],[0,"        "]],"start1":2134,"start2":2134,"length1":26,"length2":16},{"diffs":[[0,":weight,"],[1," :unit,"],[0," :reps])"]],"start1":2809,"start2":2809,"length1":16,"length2":23}]],"length":2898,"saved":false}
{"ts":1360348314501,"patch":[[{"diffs":[[0,"          else\r\n"],[1,"                metric = nick.metric #Get metric preference before switching target\r\n"],[0,"                "]],"start1":1433,"start2":1433,"length1":32,"length2":117},{"diffs":[[0," = getLifts(nick"],[1,", metric"],[0,")\r\n             "]],"start1":1673,"start2":1673,"length1":32,"length2":40}]],"length":2991,"saved":false}
{"ts":1360348392629,"patch":[[{"diffs":[[0,"fts(nick"],[1,", nick.metric"],[0,")\r\n     "]],"start1":1326,"start2":1326,"length1":16,"length2":29}]],"length":3004,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360349026422,"patch":[[{"diffs":[[0,"}: #{to_"],[-1,"lb"],[1,"kg"],[0,"(lift.we"]],"start1":2484,"start2":2484,"length1":18,"length2":18},{"diffs":[[0,"weight)}"],[-1,"lb"],[1,"kg"],[0,"x#{lift."]],"start1":2500,"start2":2500,"length1":18,"length2":18},{"diffs":[[0,"ift.lift}: #{to_"],[-1,"kg"],[1,"lb"],[0,"(lift.weight)}kg"]],"start1":2657,"start2":2657,"length1":34,"length2":34},{"diffs":[[0,"lb(lift.weight)}"],[-1,"kg"],[1,"lb"],[0,"x#{lift.reps}\"\r\n"]],"start1":2673,"start2":2673,"length1":34,"length2":34}]],"length":3004,"saved":false}
{"ts":1360349178077,"patch":[[{"diffs":[[0,", nick.metric)\r\n"],[1,"                m.reply \"LiftTracker | No lifts for #{m.user.nick}\", true if lifts.nil?\r\n"],[0,"                "]],"start1":1334,"start2":1334,"length1":32,"length2":121}]],"length":3093,"saved":false}
{"ts":1360349193622,"patch":[[{"diffs":[[0,"(nick, metric)\r\n"],[1,"                m.reply \"LiftTracker | No lifts for #{parameters[0]}\", true if lifts.nil?\r\n"],[0,"                "]],"start1":1786,"start2":1786,"length1":32,"length2":123}]],"length":3184,"saved":false}
{"ts":1360349810085,"patch":[[{"diffs":[[0,"t)\r\n        "],[1,"("],[0,"weight / 2.2"]],"start1":2187,"start2":2187,"length1":24,"length2":25},{"diffs":[[0,"weight / 2.2"],[1,").round(2)"],[0,"\r\n    end\r\n "]],"start1":2200,"start2":2200,"length1":24,"length2":34},{"diffs":[[0,"        "],[1,"("],[0,"weight *"]],"start1":2263,"start2":2263,"length1":16,"length2":17},{"diffs":[[0,"ht * 2.2"],[1,").round(2)"],[0,"\r\n    en"]],"start1":2276,"start2":2276,"length1":16,"length2":26}]],"length":3206,"saved":false}
{"ts":1360350763342,"patch":[[{"diffs":[[0,"Plugin\r\n"],[1,"    "],[0,"\r\n    ma"]],"start1":59,"start2":59,"length1":16,"length2":20},{"diffs":[[0," match /"],[1,"^lift/i, method: :getLift\r\n    def getLift(m)\r\n        return unless ignore_nick(m.user.nick).nil?\r\n        getLiftForUser(m, m.user.nick)\r\n    end\r\n    \r\n    match /^lift \\S+/, method: :getLiftForUser\r\n    def getLiftForUser(m, user)\r\n        return unless ignore_nick(m.user.nick).nil?\r\n        begin\r\n    \t\tnick = Nick.first_or_create :nick => m.user.nick.downcase\r\n            metric = nick.metric #Get metric preference before switching target\r\n            \r\n            nick = Nick.first :nick => parameters[0].downcase\r\n            raise \"No such nick\" if nick.nil?\r\n            \r\n            lifts = getLifts(nick, metric)\r\n            m.reply \"LiftTracker | No lifts for #{user}\", true if lifts.nil?\r\n            m.reply \"LiftTracker | Lifts for #{user} | #{lifts.join(\", \")}\", true\r\n            \r\n    \trescue Exception => x\r\n            error x.message\r\n            error x.backtrace.inspect\r\n\t\t\tm.reply \"LiftTracker | Error | #{x.message}\"\r\n\t\tend\r\n    end\r\n    \r\n    match /^lift add (\\S+) (\\S+) (\\S+) (\\S+)?/, method: :addLift\r\n    def addLift(m, lift, weight, unit, reps)\r\n        return unless ignore_nick(m.user.nick).nil?\r\n        begin\r\n            reps ||= 1\r\n            case unit\r\n            when /kgs?|kilo(?:gram)?s?/\r\n                unit = 'kg'\r\n            when /lbs?|pounds?/\r\n                unit = 'lb'\r\n            else raise \"Invalid unit\"\r\n            end\r\n            nick.lifts.first_or_create( :lift => lift.downcase ).update( :weight => weight, :unit => unit, :reps => reps )\r\n            m.reply \"LiftTracker | Added lift: #{lift}. Weight: #{weight}#{unit}. Reps: #{reps}\", true\r\n        rescue Exception => x\r\n            error x.message\r\n            error x.backtrace.inspect\r\n    \t\tm.reply \"LiftTracker | Error | #{x.message}\"\r\n        end\r\n    end\r\n    \r\n    match /^lift (?:remove|rm) (\\S+)/, method: :removeLift\r\n    def removeLift(m, lift)\r\n        return unless ignore_nick(m.user.nick).nil?\r\n    end\r\n\r\n    match /^"],[0,"lift(?: "]],"start1":76,"start2":76,"length1":16,"length2":1977}]],"length":5171,"saved":false}
{"ts":1360350961295,"patch":[[{"diffs":[[0,"     begin\r\n"],[1,"            nick = Nick.first_or_create :nick => m.user.nick.downcase\r\n"],[0,"            "]],"start1":1226,"start2":1226,"length1":24,"length2":95},{"diffs":[[0,"l?\r\n    "],[-1,"end\r\n"],[1,"    \r\n        begin\r\n            nick = Nick.first_or_create :nick => m.user.nick.downcase\r\n            lift = nick.lifts.first( :lift => parameters[1].downcase )\r\n            if lift.nil?\r\n                raise \"Lift does not exist\"\r\n            else\r\n                lift.destroy\r\n                m.reply \"LiftTracker | Deleted lift: #{parameters[1]}\", true\r\n            end\r\n        rescue Exception => x\r\n            error x.message\r\n            error x.backtrace.inspect\r\n        \tm.reply \"LiftTracker | Error | #{x.message}\"\r\n        end\r\n    end\r\n\r\n=begin"],[0,"\r\n    ma"]],"start1":2089,"start2":2089,"length1":21,"length2":578},{"diffs":[[0,"\tend\r\n\tend\r\n"],[1,"=end\r\n    \r\n"],[0,"    \r\n    de"]],"start1":4742,"start2":4742,"length1":24,"length2":36}]],"length":5811,"saved":false}
{"ts":1360351028863,"patch":[[{"diffs":[[0,"\n    match /"],[-1,"^"],[0,"lift/i, meth"]],"start1":72,"start2":72,"length1":25,"length2":24},{"diffs":[[0,": :getLift\r\n"],[1,""],[0,"    def getL"]],"start1":98,"start2":98,"length1":24,"length2":24},{"diffs":[[0,"\n    match /"],[-1,"^"],[0,"lift \\S+/, m"]],"start1":237,"start2":237,"length1":25,"length2":24},{"diffs":[[0,"\n    match /"],[-1,"^"],[0,"lift add (\\S"]],"start1":1055,"start2":1055,"length1":25,"length2":24},{"diffs":[[0,"\n    end\r\n    \r\n"],[1,""],[0,"    match /^lift"]],"start1":1932,"start2":1932,"length1":32,"length2":32},{"diffs":[[0,"\n    match /"],[-1,"^"],[0,"lift (?:remo"]],"start1":1947,"start2":1947,"length1":25,"length2":24}]],"length":5807,"saved":false}
{"ts":1360351095376,"patch":[[{"diffs":[[0,"st :nick => "],[-1,"parameters[0]"],[1,"user"],[0,".downcase\r\n "]],"start1":573,"start2":573,"length1":37,"length2":28}]],"length":5798,"saved":false}
{"ts":1360351366758,"patch":[[{"diffs":[[0,"+) (\\S+)"],[1,"(?:"],[0," (\\S+)"],[1,")"],[0,"?/, meth"]],"start1":1076,"start2":1076,"length1":22,"length2":26}]],"length":5802,"saved":false}
{"ts":1360351419926,"patch":[[{"diffs":[[0,"ch /lift"],[1,"$"],[0,"/i, meth"]],"start1":80,"start2":80,"length1":16,"length2":17}]],"length":5803,"saved":false}
{"ts":1360351424502,"patch":[[{"diffs":[[0,"lift \\S+"],[1,"$"],[0,"/, metho"]],"start1":250,"start2":250,"length1":16,"length2":17}]],"length":5804,"saved":false}
{"ts":1360351522447,"patch":[[{"diffs":[[0,"t( :lift => "],[-1,"parameters[1]"],[1,"lift"],[0,".downcase )\r"]],"start1":2216,"start2":2216,"length1":37,"length2":28}]],"length":5795,"saved":false}
{"ts":1360351527711,"patch":[[{"diffs":[[0,"ted lift: #{"],[-1,"parameters[1]"],[1,"lift"],[0,"}\", true\r\n  "]],"start1":2407,"start2":2407,"length1":37,"length2":28}]],"length":5786,"saved":false}
{"ts":1360351540054,"patch":[[{"diffs":[[0,"end\r"],[-1,"\n\r\n=begin\r\n    match /^lift(?: (.+))?/i\r\n\tdef execute(m, query)\r\n\t\treturn unless ignore_nick(m.user.nick).nil?\r\n\r\n\t\tbegin\r\n\t\t\tnick = Nick.first_or_create :nick => m.user.nick.downcase\r\n            parameters = query.split if !query.nil?\r\n            command = parameters.nil? ? nil : parameters[0].downcase\r\n            \r\n            case command\r\n            when \"add\"\r\n                case parameters[3]\r\n                when /kgs?|kilo(?:gram)?s?/\r\n                    unit = 'kg'\r\n                when /lbs?|pounds?/\r\n                    unit = 'lb'\r\n                end\r\n                nick.lifts.first_or_create( :lift => parameters[1].downcase ).update( :weight => parameters[2], :unit => unit, :reps => (parameters[4]||1) )\r\n                m.reply \"LiftTracker | Added lift: #{parameters[1]}. Weight: #{parameters[2]}#{unit}. Reps: #{parameters[4]||1}\", true\r\n            when \"remove\", \"rm\"\r\n                lift = nick.lifts.first( :lift => parameters[1].downcase )\r\n                if lift.nil?\r\n                    raise \"Lift does not exist\"\r\n                else\r\n                    lift.destroy\r\n                    m.reply \"LiftTracker | Deleted lift: #{parameters[1]}\", true\r\n                end\r\n            when nil\r\n                lifts = getLifts(nick, nick.metric)\r\n                m.reply \"LiftTracker | No lifts for #{m.user.nick}\", true if lifts.nil?\r\n                m.reply \"LiftTracker | Lifts for #{m.user.nick} | #{lifts.join(\", \")}\", true\r\n            else\r\n                metric = nick.metric #Get metric preference before switching target\r\n                nick = Nick.first :nick => parameters[0].downcase\r\n                raise \"No such nick\" if nick.nil?\r\n                lifts = getLifts(nick, metric)\r\n                m.reply \"LiftTracker | No lifts for #{parameters[0]}\", true if lifts.nil?\r\n                m.reply \"LiftTracker | Lifts for #{parameters[0]} | #{lifts.join(\", \")}\", true\r\n            end\r\n\t\trescue Exception => x\r\n            error x.message\r\n            error x.backtrace.inspect\r\n\t\t\tm.reply \"LiftTracker | Error | #{x.message}\"\r\n\t\tend\r\n\tend\r\n=end\r\n    \r"],[0,"\n   "]],"start1":2621,"start2":2621,"length1":2123,"length2":8}]],"length":3671,"saved":false}
{"ts":1360351599616,"patch":[[{"diffs":[[0,": #{lift"],[1,".lift"],[0,"}\", true"]],"start1":2415,"start2":2415,"length1":16,"length2":21}]],"length":3676,"saved":false}
{"ts":1360352258769,"patch":[[{"diffs":[[0,"lift \\S+"],[-1,"$"],[0,"/, metho"]],"start1":250,"start2":250,"length1":17,"length2":16}]],"length":3675,"saved":false}
{"ts":1360352383895,"patch":[[{"diffs":[[0,"h /lift "],[1,"("],[0,"\\S+"],[1,")"],[0,"/, metho"]],"start1":247,"start2":247,"length1":19,"length2":21}]],"length":3677,"saved":false}
{"ts":1360352385674,"patch":[[{"diffs":[[0," /lift (\\S+)"],[1,"$"],[0,"/, method: :"]],"start1":248,"start2":248,"length1":24,"length2":25}]],"length":3678,"saved":false}
{"ts":1360352934696,"patch":[[{"diffs":[[0,"\n    end\r\n    \r\n"],[1,"    match /lift add (\\S+) (\\S+)(?: (\\S+))?/, method: :addLiftNoUnit\r\n    def addLiftNoUnit(m, lift, weight, reps)\r\n        return unless ignore_nick(m.user.nick).nil?\r\n        begin\r\n            nick = Nick.first_or_create :nick => m.user.nick.downcase\r\n            unit = nick.metric ? 'kg' : 'lb'\r\n            addLift(m, lift, weight, unit, reps)\r\n        rescue Exception => x\r\n            error x.message\r\n            error x.backtrace.inspect\r\n        \tm.reply \"LiftTracker | Error | #{x.message}\"\r\n        end\r\n    end\r\n    \r\n"],[0,"    match /lift "]],"start1":1035,"start2":1035,"length1":32,"length2":564}]],"length":4210,"saved":false}
{"ts":1360352970085,"patch":[[{"diffs":[[0," (\\S+) (\\S+)"],[-1," "],[1,"\\s?"],[0,"(\\S+)(?: (\\S"]],"start1":1602,"start2":1602,"length1":25,"length2":27}]],"length":4212,"saved":false}
{"ts":1360352994268,"patch":[[{"diffs":[[0,"(\\S+) (\\"],[-1,"S+"],[1,"d+(?:\\.\\d+)?"],[0,")\\s?(\\S+"]],"start1":1603,"start2":1603,"length1":18,"length2":28}]],"length":4222,"saved":false}
{"ts":1360353119501,"patch":[[{"diffs":[[0,")?)\\s?(\\"],[-1,"S"],[1,"w"],[0,"+)(?: (\\"]],"start1":1621,"start2":1621,"length1":17,"length2":17}]],"length":4222,"saved":false}
{"ts":1360353164129,"patch":[[{"diffs":[[0,"(\\S+) (\\"],[-1,"S+"],[1,"d+(?:\\.\\d+)?"],[0,")(?: (\\S"]],"start1":1071,"start2":1071,"length1":18,"length2":28}]],"length":4232,"saved":false}
{"ts":1360353247351,"patch":[[{"diffs":[[0,"d+)?)(?: (\\S+))?"],[1,"$"],[0,"/, method: :addL"]],"start1":1087,"start2":1087,"length1":32,"length2":33}]],"length":4233,"saved":false}
{"ts":1360353263464,"patch":[[{"diffs":[[0,"\\d+)?)(?: (\\"],[-1,"S"],[1,"d"],[0,"+))?$/, meth"]],"start1":1086,"start2":1086,"length1":25,"length2":25}]],"length":4233,"saved":false}
{"ts":1360353268921,"patch":[[{"diffs":[[0,"+)(?: (\\"],[-1,"S"],[1,"d"],[0,"+))?/, m"]],"start1":1641,"start2":1641,"length1":17,"length2":17}]],"length":4233,"saved":false}
{"ts":1360353277165,"patch":[[{"diffs":[[0,"tch /lift add (\\"],[-1,"S"],[1,"w"],[0,"+) (\\d+(?:\\.\\d+)"]],"start1":1057,"start2":1057,"length1":33,"length2":33},{"diffs":[[0,"t add (\\"],[-1,"S"],[1,"w"],[0,"+) (\\d+("]],"start1":1608,"start2":1608,"length1":17,"length2":17}]],"length":4233,"saved":false}
{"ts":1360353281175,"patch":[[{"diffs":[[0,"e|rm) (\\"],[-1,"S"],[1,"w"],[0,"+)/, met"]],"start1":2526,"start2":2526,"length1":17,"length2":17}]],"length":4233,"saved":false}
{"ts":1360354760740,"patch":[[{"diffs":[[0,"r | "],[-1,"Lifts for #{user}"],[1,"#{user}[#{getHeight(user, metric)} #{getWeight(user, metric)}]"],[0," | #"]],"start1":818,"start2":818,"length1":25,"length2":70}]],"length":4278,"saved":false}
{"ts":1360354931422,"patch":[[{"diffs":[[0,"f lifts."],[-1,"nil"],[1,"empty"],[0,"?\r\n     "]],"start1":773,"start2":773,"length1":19,"length2":21},{"diffs":[[0," #{user}"],[-1,"["],[1," ("],[0,"#{getHei"]],"start1":823,"start2":823,"length1":17,"length2":18},{"diffs":[[0,"#{getHeight("],[-1,"user"],[1,"nick"],[0,", metric)} #"]],"start1":833,"start2":833,"length1":28,"length2":28},{"diffs":[[0,"tWeight("],[-1,"user"],[1,"nick"],[0,", metric"]],"start1":864,"start2":864,"length1":20,"length2":20},{"diffs":[[0,"metric)}"],[-1,"]"],[1,")"],[0," | #{lif"]],"start1":878,"start2":878,"length1":17,"length2":17},{"diffs":[[0,"   end\r\n"],[1,"    \r\n    def getHeight(user, metric = true)\r\n        \r\n    end\r\n    \r\n    def getWeight(user, metric = true)\r\n    end\r\n    \r\n"],[0,"end"]],"start1":4270,"start2":4270,"length1":11,"length2":137}]],"length":4407,"saved":false}
{"ts":1360355139460,"patch":[[{"diffs":[[0,"    "],[-1,"\r\n    end\r\n    \r\n    def getWeight(user, metric = true)"],[1,"if metric\r\n            \"#{(nick.height / 100).round(2)}m\"\r\n        else\r\n            \"#{(nick.height / 2.54 / 12).round(2)}ft\"\r\n        end\r\n    end\r\n    \r\n    def getWeight(user, metric = true)\r\n        if metric\r\n            \"#{nick.weight}kg\"\r\n        else\r\n            \"#{(nick.weight * 2.2).round(2)}lb\"\r\n        end"],[0,"\r\n  "]],"start1":4328,"start2":4328,"length1":63,"length2":329}]],"length":4673,"saved":false}
{"ts":1360355236997,"patch":[[{"diffs":[[0,"f getHeight("],[-1,"user"],[1,"nick"],[0,", metric = t"]],"start1":4290,"start2":4290,"length1":28,"length2":28},{"diffs":[[0,"tWeight("],[-1,"user"],[1,"nick"],[0,", metric"]],"start1":4498,"start2":4498,"length1":20,"length2":20}]],"length":4673,"saved":false}
{"ts":1360355977869,"patch":[[{"diffs":[[0,"+)?)\\s?("],[-1,"\\w"],[1,"[a-zA-Z]"],[0,"+)(?: (\\"]],"start1":1679,"start2":1679,"length1":18,"length2":24}]],"length":4679,"saved":false}
{"ts":1360356010685,"patch":[[{"diffs":[[0," (\\S+)$/"],[1,"i"],[0,", method"]],"start1":254,"start2":254,"length1":16,"length2":17},{"diffs":[[0,"iftForUser\r\n"],[-1,""],[0,"    def getL"]],"start1":278,"start2":278,"length1":24,"length2":24},{"diffs":[[0,"\\d+))?$/"],[1,"i"],[0,", method"]],"start1":1146,"start2":1146,"length1":16,"length2":17},{"diffs":[[0,"(\\d+))?/"],[1,"i"],[0,", method"]],"start1":1703,"start2":1703,"length1":16,"length2":17},{"diffs":[[0,"\n    end\r\n    \r\n"],[-1,""],[0,"    match /lift "]],"start1":2543,"start2":2543,"length1":32,"length2":32},{"diffs":[[0,") (\\w+)/"],[1,"i"],[0,", method"]],"start1":2587,"start2":2587,"length1":16,"length2":17}]],"length":4683,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360618015969,"patch":[[{"diffs":[[0,"etric)\r\n"],[1,"            if lifts.empty?\r\n    "],[0,"        "]],"start1":702,"start2":702,"length1":16,"length2":49},{"diffs":[[0,"}\", true"],[-1," if lifts.empty?\r\n"],[1,"\r\n            else\r\n    "],[0,"        "]],"start1":797,"start2":797,"length1":34,"length2":40},{"diffs":[[0,"(\", \")}\", true\r\n"],[1,"            end\r\n"],[0,"            \r\n  "]],"start1":942,"start2":942,"length1":32,"length2":49}]],"length":4739,"saved":false}
