{"ts":1358959807344,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1358959655389,"patch":[[{"diffs":[[1,"# encoding: utf-8\r\n\r\nEncoding.default_external = \"UTF-8\"\r\nEncoding.default_internal = \"UTF-8\"\r\n\r\nclass Uri \r\n    include Cinch::Plugin\r\n\treact_on :channel\r\n\r\n\tdef minutes_in_words(timestamp)\r\n\t\tminutes = (((Time.now - timestamp).abs)/60).round\r\n\r\n\t\treturn nil if minutes < 0\r\n\r\n\t\tcase minutes\r\n\t\twhen 0..1      then \"just now\"\r\n\t\twhen 2..59     then \"#{minutes.to_s} minutes ago\"\r\n\t\twhen 60..1439        \r\n\t\t\twords = (minutes/60)\r\n\t\t\tif words > 1\r\n\t\t\t\t\"#{words.to_s} hours ago\"\r\n\t\t\telse\r\n\t\t\t\t\"#{words.to_s} hour ago\"\r\n\t\t\tend\r\n\t\twhen 1440..11519     \r\n\t\t\twords = (minutes/1440)\r\n\t\t\tif words > 1\r\n\t\t\t\t\"#{words.to_s} days ago\"\r\n\t\t\telse\r\n\t\t\t\t\"#{words.to_s} day ago\"\r\n\t\t\tend\r\n\t\twhen 11520..43199    \r\n\t\t\twords = (minutes/11520)\r\n\t\t\tif words > 1\r\n\t\t\t\t\"#{words.to_s} weeks ago\"\r\n\t\t\telse\r\n\t\t\t\t\"#{words.to_s} week ago\"\r\n\t\t\tend\r\n\t\twhen 43200..525599   \r\n\t\t\twords = (minutes/43200)\r\n\t\t\tif words > 1\r\n\t\t\t\t\"#{words.to_s} months ago\"\r\n\t\t\telse\r\n\t\t\t\t\"#{words.to_s} month ago\"\r\n\t\t\tend\r\n\t\telse                      \r\n\t\t\twords = (minutes/525600)\r\n\t\t\tif words > 1\r\n\t\t\t\t\"#{words.to_s} years ago\"\r\n\t\t\telse\r\n\t\t\t\t\"#{words.to_s} year ago\"\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\r\n\tlisten_to :channel\r\n\tdef listen(m)\r\n\t\treturn unless ignore_nick(m.user.nick).nil? and disable_passive(m.channel.name).nil?\r\n\r\n\t\tmessage = m.message.gsub(' ', \"****\")\r\n\t\tmessage = Addressable::URI.parse(message).normalize\r\n\t\tmessage = message.to_s.gsub('****', ' ')\r\n\r\n\t\tURI.extract(message, [\"http\", \"https\"]).first(1).each do |link|\r\n\r\n\t\t\turi = URI.parse(link)\r\n\r\n\t\t\tbegin\r\n\r\n\t\t\t\tif(@agent.nil?)\r\n\t\t\t\t\t@agent = Mechanize.new\r\n\t\t\t\t\t@agent.user_agent_alias = \"Windows IE 7\"\r\n\t\t\t\t\t@agent.follow_meta_refresh = true\r\n\t\t\t\t\t@agent.redirect_ok = true\r\n\t\t\t\tend\r\n\r\n\t\t\t\tif uri.host == \"t.co\"\r\n\t\t\t\t\tfinal_uri = ''\r\n\t\t\t\t\topen(link) { |h| final_uri = h.base_uri }\r\n\r\n\t\t\t\t\tlink = final_uri.to_s\r\n\t\t\t\t\turi = URI.parse(final_uri.to_s)\r\n\t\t\t\tend\r\n\r\n\t\t\t\tbegin\r\n\t\t\t\t\tpage = @agent.head link\r\n\t\t\t\trescue\r\n\t\t\t\t\tpage = @agent.get link\r\n\t\t\t\tend\r\n\r\n\t\t\t\t# Title\r\n\t\t\t\tif page.header['content-type'].include? \"html\"\r\n\r\n\t\t\t\t\tcase uri.host\r\n\r\n\t\t\t\t\twhen \"boards.4chan.org\"\r\n\r\n\t\t\t\t\t\tdoc = @agent.get(link)\r\n\t\t\t\t\t\tbang = URI::split(link)\r\n\r\n\t\t\t\t\t\tif bang[5].include? \"/res/\"\r\n\r\n\t\t\t\t\t\t\tif bang[8] != nil\r\n\t\t\t\t\t\t\t\tpostnumber = bang[8].gsub('p', '')\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tpostnumber = bang[5].gsub(/\\/(.*)\\/res\\//, '')\r\n\t\t\t\t\t\t\tend\r\n\r\n\t\t\t\t\t\t\tsubject   = doc.search(\"//div[@id='pi#{postnumber}']//span[@class='subject']\").text\r\n\t\t\t\t\t\t\tposter    = doc.search(\"//div[@id='pi#{postnumber}']//span[@class='name']\").text\r\n\t\t\t\t\t\t\ttrip      = doc.search(\"//div[@id='pi#{postnumber}']//span[@class='postertrip']\").text\r\n\t\t\t\t\t\t\treply     = doc.search(\"//div[@id='p#{postnumber}']/blockquote\").inner_html.gsub(\"<br>\", \" \").gsub(\"<span class=\\\"quote\\\">\", \"\u00033\").gsub(\"</span>\", \"\u0003\").gsub(/<span class=\"spoiler\"?[^>]*>/, \"\u00031,1\").gsub(\"</span>\", \"\u0003\")\r\n\t\t\t\t\t\t\treply     = reply.gsub(/<\\/?[^>]*>/, \"\").gsub(\"&gt;\", \">\")\r\n\t\t\t\t\t\t\timage     = doc.search(\"//span[@id='fT#{postnumber}']/a[1]/@href\").text\r\n\t\t\t\t\t\t\tdate      = doc.search(\"//div[@id='p#{postnumber}']//span[@class='dateTime']\").text\r\n\r\n\t\t\t\t\t\t\tsubject = subject+\" \" if subject != \"\"\r\n\t\t\t\t\t\t\treply = \" \u00033|\u0003 \"+reply if reply != \"\"\r\n\t\t\t\t\t\t\treply = reply[0..160]+\" ...\" if reply.length > 160\r\n\t\t\t\t\t\t\timage = \" \u00033|\u0003 File: http:\"+image if image.length > 1\r\n\r\n\t\t\t\t\t\t\tm.reply \"4chan \u00033|\u0003 %s\u00033%s%s\u0003 %s No.%s%s%s\" % [subject, poster, trip, date, postnumber, image, reply]\r\n\r\n\t\t\t\t\t\telse # Board Index Title\r\n\t\t\t\t\t\t\tpage = @agent.get(link)\r\n\r\n\t\t\t\t\t\t\tbegin\r\n\t\t\t\t\t\t\t\ttitle = page.title.gsub(/\\s+/, ' ').strip\r\n\t\t\t\t\t\t\trescue\r\n\t\t\t\t\t\t\t\ttitle = \"text/html\"\r\n\t\t\t\t\t\t\tend\r\n\r\n\t\t\t\t\t\t\turi = URI.parse(page.uri.to_s)\r\n\t\t\t\t\t\t\tm.reply \"Title \u00033|\u0003 %s \u00033|\u0003 %s\" % [title, uri.host]\r\n\t\t\t\t\t\tend\r\n\r\n\t\t\t\t\twhen \"twitter.com\"\r\n\r\n\t\t\t\t\t\tbang = link.split(\"/\")\r\n\t\t\t\t\t\tbegin\r\n\t\t\t\t\t\t\tif bang[5].include? \"status\"\r\n\t\t\t\t\t\t\t\ttwurl = Nokogiri::XML(open(\"http://api.twitter.com/1/statuses/show.xml?id=#{bang[6]}&include_entities=true\", :read_timeout=>3).read)\r\n\r\n\t\t\t\t\t\t\t\ttweettext   = twurl.xpath(\"//status/text\").text.gsub(/\\s+/, ' ')\r\n\t\t\t\t\t\t\t\tposted      = twurl.xpath(\"//status/created_at\").text\r\n\t\t\t\t\t\t\t\tname        = twurl.xpath(\"//status/user/name\").text\r\n\t\t\t\t\t\t\t\tscreenname  = twurl.xpath(\"//status/user/screen_name\").text\r\n\r\n\t\t\t\t\t\t\t\turls        = twurl.xpath(\"//status/entities/urls/url\")\r\n\r\n\t\t\t\t\t\t\t\turls.each do |rep|\r\n\t\t\t\t\t\t\t\t\tshortened   = rep.xpath(\"url\").text\r\n\t\t\t\t\t\t\t\t\texpanded    = rep.xpath(\"expanded_url\").text\r\n\t\t\t\t\t\t\t\t\ttweettext   = tweettext.gsub(shortened, expanded)\r\n\t\t\t\t\t\t\t\tend\r\n\r\n\t\t\t\t\t\t\t\ttime        = Time.parse(posted)\r\n\t\t\t\t\t\t\t\ttime        = minutes_in_words(time)\r\n\r\n\t\t\t\t\t\t\t\tm.reply \"Twitter \u000312|\u0003 \u0002#{name}\u0002 (@#{screenname}) \u000312|\u0003 #{tweettext} \u000312|\u0003 Posted #{time}\"\r\n\t\t\t\t\t\t\telsif bang[4].include? \"status\"\r\n\t\t\t\t\t\t\t\ttwurl = Nokogiri::XML(open(\"http://api.twitter.com/1/statuses/show.xml?id=#{bang[5]}&include_entities=true\", :read_timeout=>3).read)\r\n\r\n\t\t\t\t\t\t\t\ttweettext   = twurl.xpath(\"//status/text\").text.gsub(/\\s+/, ' ')\r\n\t\t\t\t\t\t\t\tposted      = twurl.xpath(\"//status/created_at\").text\r\n\t\t\t\t\t\t\t\tname        = twurl.xpath(\"//status/user/name\").text\r\n\t\t\t\t\t\t\t\tscreenname  = twurl.xpath(\"//status/user/screen_name\").text\r\n\r\n\t\t\t\t\t\t\t\turls        = twurl.xpath(\"//status/entities/urls/url\")\r\n\r\n\t\t\t\t\t\t\t\turls.each do |rep|\r\n\t\t\t\t\t\t\t\t\tshortened   = rep.xpath(\"url\").text\r\n\t\t\t\t\t\t\t\t\texpanded    = rep.xpath(\"expanded_url\").text\r\n\t\t\t\t\t\t\t\t\ttweettext   = tweettext.gsub(shortened, expanded)\r\n\t\t\t\t\t\t\t\tend\r\n\r\n\t\t\t\t\t\t\t\ttime        = Time.parse(posted)\r\n\t\t\t\t\t\t\t\ttime        = minutes_in_words(time)\r\n\r\n\t\t\t\t\t\t\t\tm.reply \"Twitter \u000312|\u0003 \u0002#{name}\u0002 (@#{screenname}) \u000312|\u0003 #{tweettext} \u000312|\u0003 Posted #{time}\"\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tm.reply \"Title \u00033|\u0003 Twitter \u00033|\u0003 twitter.com\"\r\n\t\t\t\t\t\t\tend\r\n\t\t\t\t\t\trescue\r\n\t\t\t\t\t\t\tm.reply \"Title \u00033|\u0003 Twitter \u00033|\u0003 twitter.com\"\r\n\t\t\t\t\t\tend\r\n\r\n\t\t\t\t\telse # Generic Title\r\n\t\t\t\t\t\tpage = @agent.get(link)\r\n\r\n\t\t\t\t\t\tbegin\r\n\t\t\t\t\t\t\ttitle = page.title.gsub(/\\s+/, ' ').strip\r\n\t\t\t\t\t\trescue\r\n\t\t\t\t\t\t\ttitle = \"text/html\"\r\n\t\t\t\t\t\tend\r\n\r\n\t\t\t\t\t\turi = URI.parse(page.uri.to_s)\r\n\t\t\t\t\t\tm.reply \"Title \u00033|\u0003 %s \u00033|\u0003 %s\" % [title, uri.host]\r\n\t\t\t\t\tend\r\n\r\n\t\t\t\t# File\r\n\t\t\t\telse\r\n\t\t\t\t\treturn unless ignore_nick(m.user.nick).nil? and disable_passive_files(m.channel.name).nil?\r\n\r\n\t\t\t\t\tfileSize = page.header['content-length'].to_i\r\n\r\n\t\t\t\t\tcase fileSize\r\n\t\t\t\t\t\twhen 0..1024 then size = (fileSize.round(1)).to_s + \" B\"\r\n\t\t\t\t\t\twhen 1025..1048576 then size = ((fileSize/1024.0).round(1)).to_s + \" KB\"\r\n\t\t\t\t\t\twhen 1048577..1073741824 then size = ((fileSize/1024.0/1024.0).round(1)).to_s + \" MB\"\r\n\t\t\t\t\t\telse size = ((fileSize/1024.0/1024.0/1024.0).round(1)).to_s + \" GB\"\r\n\t\t\t\t\tend\r\n\r\n\t\t\t\t\tfilename = ''\r\n\r\n\t\t\t\t\tif page.header['content-disposition']\r\n\t\t\t\t\t\tfilename = page.header['content-disposition'].gsub(\"inline;\", \"\").gsub(\"filename=\", \"\").gsub(/\\s+/, ' ') + \" \"\r\n\t\t\t\t\tend\r\n\r\n\t\t\t\t\ttype = page.header['content-type']\r\n\r\n\t\t\t\t\turi = URI.parse(page.uri.to_s)\r\n\r\n\t\t\t\t\tm.reply \"File \u00033|\u0003 %s%s %s \u00033|\u0003 %s\" % [filename, type, size, uri.host]\r\n\t\t\t\tend\r\n\r\n\t\t\trescue Mechanize::ResponseCodeError => ex\r\n\t\t\t\tm.reply \"Title \u00033|\u0003 #{ex.response_code} Error\" \r\n\t\t\trescue\r\n\t\t\t\tnil\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\nend"]],"start1":0,"start2":0,"length1":0,"length2":7083}]],"length":7083,"saved":false}
{"contributors":[],"silentsave":false,"ts":1358962722897,"patch":[[{"diffs":[[0,"n\r\n\t"],[1,"set :"],[0,"react_on"],[1,","],[0," :ch"]],"start1":133,"start2":133,"length1":16,"length2":22}]],"length":7089,"saved":false}
