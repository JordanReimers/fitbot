{"ts":1359128534186,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1359130268387,"patch":[[{"diffs":[[1,"# encoding: utf-8\r\n\r\nclass Timer\r\n    include Cinch::Plugin\r\n    \r\n    require 'actiontimer'\r\n    require 'chronic'\r\n    \r\n    @@timer = ActionTimer::Timer.new\r\n    \r\n    match /(?:remind|timer) (.+)\\s?\\|\\s?(.+)(?:\\s?-(r(?:e(?:peat)?)?))?/i\r\n    \r\n    def execute (m,time,message,repeat)\r\n        return unless ignore_nick(m.user.nick).nil?\r\n        return unless repeat.nil? || check_admin(m.user)\r\n    \tbegin\r\n        \r\n            realtime = Chronic.parse time\r\n            repeat.nil? ? repeat = false : repeat = true\r\n            \r\n            @@timer.add(:period => realtime, :once => repeat, :data => message){|x| m.reply \"#{x}\" }\r\n\r\n\t\t\tm.reply \"Remind \u00032|\u0003 Reminder set for #{realtime}: #{message}\"\r\n\t\trescue\r\n\t\t\tm.reply \"Remind \u00032|\u0003 Error\"\r\n\t\tend\r\n    end\r\nend"]],"start1":0,"start2":0,"length1":0,"length2":769}]],"length":769,"saved":false}
{"ts":1359130297037,"patch":[[{"diffs":[[0,"\r\nclass "],[-1,"Tim"],[1,"Remind"],[0,"er\r\n    "]],"start1":19,"start2":19,"length1":19,"length2":22},{"diffs":[[0,"eply \"Remind"],[1,"er"],[0," \u00032|\u0003 Remind"]],"start1":650,"start2":650,"length1":24,"length2":26},{"diffs":[[0," \"Remind"],[1,"er"],[0," \u00032|\u0003 Er"]],"start1":733,"start2":733,"length1":16,"length2":18}]],"length":776,"saved":false}
