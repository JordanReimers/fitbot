{"ts":1358959856128,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1358959682324,"patch":[[{"diffs":[[1,"# encoding: utf-8\r\n\r\nclass UserSet\r\n  include Cinch::Plugin\r\n\r\n\r\n    # Last.fm username\r\n\r\n\tmatch /set lastfm (.+)/i, method: :set_lastfm\r\n\tdef set_lastfm(m, username)\r\n\t\treturn unless ignore_nick(m.user.nick).nil?\r\n\t\tbegin\r\n\t\t\told = LastfmDB.first(:nick => m.user.nick.downcase)\r\n\t\t\told.destroy! unless old.nil?\r\n\r\n\t\t\tnew = LastfmDB.new(\r\n\t\t\t\t:nick => m.user.nick.downcase,\r\n\t\t\t\t:username => username.downcase\r\n\t\t\t)\r\n\t\t\tnew.save\r\n\r\n\t\t\tm.reply \"last.fm user updated to: #{username}\", true\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend \r\n\r\n\r\n\t# Weather location\r\n\r\n\tmatch /set location (.+)/i, method: :set_location\r\n\tdef set_location(m, areacode)\r\n\t\treturn unless ignore_nick(m.user.nick).nil?\r\n\t\tbegin\r\n\t\t\told = LocationDB.first(:nick => m.user.nick.downcase)\r\n\t\t\told.destroy! unless old.nil?\r\n\r\n\t\t\tnew = LocationDB.new(\r\n\t\t\t\t:nick => m.user.nick.downcase,\r\n\t\t\t\t:location => areacode.downcase\r\n\t\t\t)\r\n\t\t\tnew.save\r\n\r\n\t\t\tm.reply \"location updated to: #{areacode}\", true\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend \r\n\r\nend"]],"start1":0,"start2":0,"length1":0,"length2":1087}]],"length":1087,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360347578430,"patch":[[{"diffs":[[0,"Plugin\r\n"],[1,"  \r\n  class String\r\n    def to_bool\r\n        return true if self == true || self =~ (/(true|t|yes|y|1)$/i)\r\n        return false if self == false || self.blank? || self =~ (/(false|f|no|n|0)$/i)\r\n        raise ArgumentError.new(\"invalid value for Boolean: \\\"#{self}\\\"\")\r\n    end\r\nend\r\n  \r\n    # Set metric preference\r\n    \r\n    match /set metric (true|false)/i, method: :set_metric\r\n    def set_metric(m, preference)\r\n        return unless ignore_nick(m.user.nick).nil?\r\n        begin\r\n            Nick.first_or_create(:nick => m.user.nick.downcase).update(:metric => preference.to_bool)\r\n            m.reply \"Metric preference set to: #{preference}\", true\r\n        rescue Exception => x\r\n            m.reply \"Error: #{x.message}\"\r\n        end\r\n    end\r\n"],[0,"\r\n\r\n    "]],"start1":53,"start2":53,"length1":16,"length2":770}]],"length":1841,"saved":false}
{"ts":1360348498142,"patch":[[{"diffs":[[0,"  \r\n"],[-1,"  class String\r\n"],[0,"    "]],"start1":61,"start2":61,"length1":24,"length2":8},{"diffs":[[0,"o_bool\r\n"],[1,""],[0,"        "]],"start1":74,"start2":74,"length1":16,"length2":16},{"diffs":[[0,"   end\r\n"],[-1,"end\r\n"],[0,"  \r\n    "]],"start1":317,"start2":317,"length1":21,"length2":16},{"diffs":[[0,"tric => "],[1,"to_bool("],[0,"preferen"]],"start1":600,"start2":600,"length1":16,"length2":24},{"diffs":[[0,"ence"],[-1,".to_bool"],[1,")"],[0,")\r\n "]],"start1":622,"start2":622,"length1":16,"length2":9}]],"length":1821,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360348620315,"patch":[[{"diffs":[[0," to_bool"],[1,"(string)"],[0,"\r\n      "]],"start1":72,"start2":72,"length1":16,"length2":24},{"diffs":[[0,"rn true if s"],[-1,"elf"],[1,"tring"],[0," == true || "]],"start1":102,"start2":102,"length1":27,"length2":29},{"diffs":[[0,"== true || s"],[-1,"elf"],[1,"tring"],[0," =~ (/(true|"]],"start1":120,"start2":120,"length1":27,"length2":29},{"diffs":[[0,"lse if s"],[-1,"elf"],[1,"tring"],[0," == fals"]],"start1":182,"start2":182,"length1":19,"length2":21},{"diffs":[[0,"lse || s"],[-1,"elf"],[1,"tring"],[0,".blank? "]],"start1":201,"start2":201,"length1":19,"length2":21},{"diffs":[[0,"nk? || s"],[-1,"elf"],[1,"tring"],[0," =~ (/(f"]],"start1":218,"start2":218,"length1":19,"length2":21},{"diffs":[[0,"\"#{s"],[-1,"elf"],[1,"tring"],[0,"}\\\"\""]],"start1":320,"start2":320,"length1":11,"length2":13}]],"length":1841,"saved":false}
{"ts":1360349909924,"patch":[[{"diffs":[[0,"|yes|y|1"],[1,"|on"],[0,")$/i)\r\n "]],"start1":150,"start2":150,"length1":16,"length2":19},{"diffs":[[0," || "],[-1,"string.blank? ||"],[0," str"]],"start1":207,"start2":207,"length1":24,"length2":8},{"diffs":[[0,"f|no|n|0"],[1,"|off"],[0,")$/i)\r\n "]],"start1":231,"start2":231,"length1":16,"length2":20}]],"length":1832,"saved":false}
{"ts":1360349930836,"patch":[[{"diffs":[[0,"ue|false"],[1,"|on|off"],[0,")/i, met"]],"start1":400,"start2":400,"length1":16,"length2":23}]],"length":1839,"saved":false}
