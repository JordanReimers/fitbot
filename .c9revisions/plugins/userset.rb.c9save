{"ts":1358959856128,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1358959682324,"patch":[[{"diffs":[[1,"# encoding: utf-8\r\n\r\nclass UserSet\r\n  include Cinch::Plugin\r\n\r\n\r\n    # Last.fm username\r\n\r\n\tmatch /set lastfm (.+)/i, method: :set_lastfm\r\n\tdef set_lastfm(m, username)\r\n\t\treturn unless ignore_nick(m.user.nick).nil?\r\n\t\tbegin\r\n\t\t\told = LastfmDB.first(:nick => m.user.nick.downcase)\r\n\t\t\told.destroy! unless old.nil?\r\n\r\n\t\t\tnew = LastfmDB.new(\r\n\t\t\t\t:nick => m.user.nick.downcase,\r\n\t\t\t\t:username => username.downcase\r\n\t\t\t)\r\n\t\t\tnew.save\r\n\r\n\t\t\tm.reply \"last.fm user updated to: #{username}\", true\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend \r\n\r\n\r\n\t# Weather location\r\n\r\n\tmatch /set location (.+)/i, method: :set_location\r\n\tdef set_location(m, areacode)\r\n\t\treturn unless ignore_nick(m.user.nick).nil?\r\n\t\tbegin\r\n\t\t\told = LocationDB.first(:nick => m.user.nick.downcase)\r\n\t\t\told.destroy! unless old.nil?\r\n\r\n\t\t\tnew = LocationDB.new(\r\n\t\t\t\t:nick => m.user.nick.downcase,\r\n\t\t\t\t:location => areacode.downcase\r\n\t\t\t)\r\n\t\t\tnew.save\r\n\r\n\t\t\tm.reply \"location updated to: #{areacode}\", true\r\n\t\trescue\r\n\t\t\tm.reply \"Oops something went wrong\", true\r\n\t\t\traise\r\n\t\tend\r\n\tend \r\n\r\nend"]],"start1":0,"start2":0,"length1":0,"length2":1087}]],"length":1087,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360347578430,"patch":[[{"diffs":[[0,"Plugin\r\n"],[1,"  \r\n  class String\r\n    def to_bool\r\n        return true if self == true || self =~ (/(true|t|yes|y|1)$/i)\r\n        return false if self == false || self.blank? || self =~ (/(false|f|no|n|0)$/i)\r\n        raise ArgumentError.new(\"invalid value for Boolean: \\\"#{self}\\\"\")\r\n    end\r\nend\r\n  \r\n    # Set metric preference\r\n    \r\n    match /set metric (true|false)/i, method: :set_metric\r\n    def set_metric(m, preference)\r\n        return unless ignore_nick(m.user.nick).nil?\r\n        begin\r\n            Nick.first_or_create(:nick => m.user.nick.downcase).update(:metric => preference.to_bool)\r\n            m.reply \"Metric preference set to: #{preference}\", true\r\n        rescue Exception => x\r\n            m.reply \"Error: #{x.message}\"\r\n        end\r\n    end\r\n"],[0,"\r\n\r\n    "]],"start1":53,"start2":53,"length1":16,"length2":770}]],"length":1841,"saved":false}
{"ts":1360348498142,"patch":[[{"diffs":[[0,"  \r\n"],[-1,"  class String\r\n"],[0,"    "]],"start1":61,"start2":61,"length1":24,"length2":8},{"diffs":[[0,"o_bool\r\n"],[1,""],[0,"        "]],"start1":74,"start2":74,"length1":16,"length2":16},{"diffs":[[0,"   end\r\n"],[-1,"end\r\n"],[0,"  \r\n    "]],"start1":317,"start2":317,"length1":21,"length2":16},{"diffs":[[0,"tric => "],[1,"to_bool("],[0,"preferen"]],"start1":600,"start2":600,"length1":16,"length2":24},{"diffs":[[0,"ence"],[-1,".to_bool"],[1,")"],[0,")\r\n "]],"start1":622,"start2":622,"length1":16,"length2":9}]],"length":1821,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360348620315,"patch":[[{"diffs":[[0," to_bool"],[1,"(string)"],[0,"\r\n      "]],"start1":72,"start2":72,"length1":16,"length2":24},{"diffs":[[0,"rn true if s"],[-1,"elf"],[1,"tring"],[0," == true || "]],"start1":102,"start2":102,"length1":27,"length2":29},{"diffs":[[0,"== true || s"],[-1,"elf"],[1,"tring"],[0," =~ (/(true|"]],"start1":120,"start2":120,"length1":27,"length2":29},{"diffs":[[0,"lse if s"],[-1,"elf"],[1,"tring"],[0," == fals"]],"start1":182,"start2":182,"length1":19,"length2":21},{"diffs":[[0,"lse || s"],[-1,"elf"],[1,"tring"],[0,".blank? "]],"start1":201,"start2":201,"length1":19,"length2":21},{"diffs":[[0,"nk? || s"],[-1,"elf"],[1,"tring"],[0," =~ (/(f"]],"start1":218,"start2":218,"length1":19,"length2":21},{"diffs":[[0,"\"#{s"],[-1,"elf"],[1,"tring"],[0,"}\\\"\""]],"start1":320,"start2":320,"length1":11,"length2":13}]],"length":1841,"saved":false}
{"ts":1360349909924,"patch":[[{"diffs":[[0,"|yes|y|1"],[1,"|on"],[0,")$/i)\r\n "]],"start1":150,"start2":150,"length1":16,"length2":19},{"diffs":[[0," || "],[-1,"string.blank? ||"],[0," str"]],"start1":207,"start2":207,"length1":24,"length2":8},{"diffs":[[0,"f|no|n|0"],[1,"|off"],[0,")$/i)\r\n "]],"start1":231,"start2":231,"length1":16,"length2":20}]],"length":1832,"saved":false}
{"ts":1360349930836,"patch":[[{"diffs":[[0,"ue|false"],[1,"|on|off"],[0,")/i, met"]],"start1":400,"start2":400,"length1":16,"length2":23}]],"length":1839,"saved":false}
{"ts":1360354369107,"patch":[[{"diffs":[[0,"   end\r\n"],[1,"    \r\n    # Set height/weight\r\n    \r\n    match /set height (\\d+(?:\\.\\d+)?)\\s?(\\w+)/, method :set_height\r\n    def set_height(m, height)\r\n        return unless ignore_nick(m.user.nick).nil?\r\n        begin\r\n            Nick.first_or_create(:nick => m.user.nick.downcase).update(:height => )\r\n            m.reply \"Height set to: #{height}\", true\r\n        rescue Exception => x\r\n            m.reply \"Error: #{x.message}\"\r\n        end\r\n    end\r\n    \r\n    match /set weight (\\d+(?:\\.\\d+)?)\\s?(\\w+)/, method :set_weight\r\n    def set_weight(m, weight, unit)\r\n        return unless ignore_nick(m.user.nick).nil?\r\n        begin\r\n            case unit\r\n                when /stone/\r\n                    weight = weight*6.35029318\r\n                when /lbs?|pounds?/\r\n                    weight = weight/2.2\r\n                else raise \"Invalid unit\"\r\n            end\r\n            Nick.first_or_create(:nick => m.user.nick.downcase).update(:weight => weight.round(2))\r\n            m.reply \"Weight set to: #{weight}\", true\r\n        rescue Exception => x\r\n            m.reply \"Error: #{x.message}\"\r\n        end\r\n    end\r\n"],[0,"  \r\n    "]],"start1":328,"start2":328,"length1":16,"length2":1123}]],"length":2946,"saved":false}
{"ts":1360354500360,"patch":[[{"diffs":[[0,"\n        begin\r\n"],[1,"            case unit\r\n                when /c(?:enti)?m(?:eter(?:s)?)?/\r\n                    weight = weight*6.35029318\r\n                when /in(?:ches)?/\r\n                    weight = weight/2.2\r\n                when /f(?:ee)?t/\r\n                when /m(?:eter(?:s)?)?/\r\n                else raise \"Invalid unit\"\r\n            end\r\n"],[0,"            Nick"]],"start1":524,"start2":524,"length1":32,"length2":366}]],"length":3280,"saved":false}
{"ts":1360354589357,"patch":[[{"diffs":[[0,", height"],[-1,")"],[1,", unit) #will be saved in cm"],[0,"\r\n      "]],"start1":461,"start2":461,"length1":17,"length2":44},{"diffs":[[0,"en /"],[-1,"c(?:enti)?m(?:eter(?:s)?"],[1,"in(?:ches"],[0,")?/\r"]],"start1":608,"start2":608,"length1":32,"length2":17},{"diffs":[[0,"    "],[-1,"w"],[1,"h"],[0,"eight = "],[-1,"w"],[1,"h"],[0,"eight"],[-1,"*6.35029318"],[1," * 2.54"],[0,"\r\n  "]],"start1":642,"start2":642,"length1":34,"length2":30},{"diffs":[[0,"      when /"],[-1,"in(?:ches"],[1,"f(?:ee"],[0,")?"],[1,"t"],[0,"/\r\n         "]],"start1":680,"start2":680,"length1":35,"length2":33},{"diffs":[[0,"        "],[-1,"w"],[1,"h"],[0,"eight = "],[-1,"w"],[1,"h"],[0,"eight"],[-1,"/2.2"],[1," * 12 * 2.54"],[0,"\r\n      "]],"start1":716,"start2":716,"length1":35,"length2":43},{"diffs":[[0,"      when /"],[-1,"f"],[1,"m"],[0,"(?:e"],[-1,"e)?t"],[1,"ter(?:s)?)?"],[0,"/\r\n         "]],"start1":763,"start2":763,"length1":33,"length2":40},{"diffs":[[0,"        "],[-1,"when /m(?:eter(?:s)?)?/"],[1,"    height = height * 100"],[0,"\r\n      "]],"start1":802,"start2":802,"length1":39,"length2":41},{"diffs":[[0,"t, unit)"],[1," #will be saved in kg"],[0,"\r\n      "]],"start1":1233,"start2":1233,"length1":16,"length2":37}]],"length":3324,"saved":false}
{"ts":1360354605809,"patch":[[{"diffs":[[0,"ight => "],[1,"height.round(2)"],[0,")\r\n     "]],"start1":971,"start2":971,"length1":16,"length2":31}]],"length":3339,"saved":false}
{"ts":1360354641476,"patch":[[{"diffs":[[0,"o: #{height}"],[1,"cm"],[0,"\", true\r\n   "]],"start1":1030,"start2":1030,"length1":24,"length2":26},{"diffs":[[0,"{weight}"],[1,"kg"],[0,"\", true\r"]],"start1":1725,"start2":1725,"length1":16,"length2":18}]],"length":3343,"saved":false}
{"ts":1360355191670,"patch":[[{"diffs":[[0,"w+)/, method"],[1,":"],[0," :set_height"]],"start1":415,"start2":415,"length1":24,"length2":25},{"diffs":[[0,", method"],[1,":"],[0," :set_we"]],"start1":1202,"start2":1202,"length1":16,"length2":17}]],"length":3345,"saved":false}
{"ts":1360355461960,"patch":[[{"diffs":[[0,"\n        begin\r\n"],[1,"            height = Float(height)\r\n"],[0,"            case"]],"start1":552,"start2":552,"length1":32,"length2":68},{"diffs":[[0,"\n        begin\r\n"],[1,"            weight = Float(weight)\r\n"],[0,"            case"]],"start1":1371,"start2":1371,"length1":32,"length2":68}]],"length":3417,"saved":false}
{"ts":1360355527283,"patch":[[{"diffs":[[0,"           end\r\n"],[1,"            height = height.round(2)\r\n"],[0,"            Nick"]],"start1":918,"start2":918,"length1":32,"length2":70},{"diffs":[[0,"ht => height"],[-1,".round(2)"],[0,")\r\n         "]],"start1":1048,"start2":1048,"length1":33,"length2":24}]],"length":3446,"saved":false}
{"ts":1360355542898,"patch":[[{"diffs":[[0,"           end\r\n"],[1,"            weight = weight.round(2)\r\n"],[0,"            Nick"]],"start1":1675,"start2":1675,"length1":32,"length2":70},{"diffs":[[0,"> weight"],[-1,".round(2)"],[0,")\r\n     "]],"start1":1809,"start2":1809,"length1":25,"length2":16}]],"length":3475,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360617630190,"patch":[[{"diffs":[[0,"     case unit\r\n"],[1,"                when /k(?:ilo)?g(?:ram)?s?/\r\n                    weight\r\n"],[0,"                "]],"start1":1459,"start2":1459,"length1":32,"length2":105}]],"length":3548,"saved":false}
{"contributors":[],"silentsave":false,"ts":1367010525615,"patch":[[{"diffs":[[0,"ht * 12 * 2.54\r\n"],[1,"                when /c(?:enti)?m(?:eter(?:s)?)?/\r\n                    height = height\r\n"],[0,"                "]],"start1":774,"start2":774,"length1":32,"length2":120}]],"length":3636,"saved":false}
{"contributors":[],"silentsave":false,"ts":1379113021909,"patch":[[{"diffs":[[0,"Plugin\r\n  \r\n"],[1,"  require 'mathn'\r\n  require 'ruby-units'\r\n  \r\n"],[0,"    def to_b"]],"start1":53,"start2":53,"length1":24,"length2":71},{"diffs":[[0,"ight/2.2"],[1,"0462"],[0,"\r\n      "]],"start1":1829,"start2":1829,"length1":16,"length2":20}]],"length":3687,"saved":false}
