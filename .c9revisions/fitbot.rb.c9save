{"ts":1358958182759,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1358959106787,"patch":[[{"diffs":[[1,"require 'rubygems'\r\nrequire 'cinch'\r\n\r\n# Database stuff\r\nrequire 'dm-core'\r\nrequire 'dm-postgres-adapter'\r\nrequire 'do_postgres'\r\n\r\n# Web stuff\r\nrequire 'mechanize'\r\nrequire 'addressable/uri'\r\nrequire 'uri'\r\nrequire 'open-uri'\r\nrequire 'nokogiri'\r\nrequire 'openssl'\r\n\r\nrequire 'date'\r\nrequire 'cgi'\r\n\r\n# Encoding issues\r\nrequire 'iconv'\r\n\r\n# Bitly API interfacing\r\nrequire 'bitly'\r\n\r\n# Global vars\r\n$BOTNICK       = \"fitbot\" # Bot nick\r\n$BOTPASSWORD   = \"oiram101\" # Nickserv password\r\n$BOTOWNER      = \"sigma\" # Make sure this is lowercase\r\n$BOTURL        = \"\" # Help page\r\n$BOTGIT        = \"\"\r\n\r\n# Twitter Feed\r\n$TWITTERFEED    = \"\"\r\n$TWITTERCHANNEL = \"\"\r\n\r\n# API Keys\r\n$BINGAPI       = \"\" # For bing search and Translate plugins\r\n$BITLYUSER     = \"mdelaossa\" # bitly username | Many plugins use this\r\n$BITLYAPI      = \"R_906dd9e81c9c7557989485f6e60fe64e\" # bitly api key  |\r\n$LASTFMAPI     = \"\" # For all last.fm functions\r\n$WOLFRAMAPI    = \"W2GVU5-XY7GQ69T55\" # For Answers\r\n\r\n# This is for SQLite\r\nDBFILE = \"/path/to/sqlite.db\"\r\nDataMapper.setup(:default, \"sqlite3://\" + DBFILE)\r\n\r\n# This is for postgres (Heroku)\r\n# DataMapper.setup(:default, ENV['DATABASE_URL'] || 'postgres://localhost/mydb') \r\n\r\nclass LastfmDB \r\n    include DataMapper::Resource\r\n\tproperty(:id, Serial)\r\n\tproperty(:nick, String, :unique => true)\r\n\tproperty(:username, String)\r\nend \r\n\r\nclass IgnoreDB\r\n\tinclude DataMapper::Resource\r\n\tproperty(:id, Serial)\r\n\tproperty(:nick, String, :unique => true)\r\nend \r\n\r\nclass LocationDB \r\n\tinclude DataMapper::Resource\r\n\tproperty(:id, Serial)\r\n\tproperty(:nick, String, :unique => true)\r\n\tproperty(:location, String)\r\nend \r\n\r\nclass PassiveDB\r\n\tinclude DataMapper::Resource\r\n\tproperty(:id, Serial)\r\n\tproperty(:channel, String, :unique => true)\r\nend \r\n\r\nclass PassiveFDB\r\n\tinclude DataMapper::Resource\r\n\tproperty(:id, Serial)\r\n\tproperty(:channel, String, :unique => true)\r\nend \r\n\r\nclass JoinDB\r\n\tinclude DataMapper::Resource\r\n\tproperty(:id, Serial)\r\n\tproperty(:channel, String, :unique => true)\r\nend \r\n\r\nclass AdminDB\r\n\tinclude DataMapper::Resource\r\n\tproperty(:id, Serial)\r\n\tproperty(:nick, String, :unique => true)\r\nend \r\n\r\nclass InsultDB \r\n\tinclude DataMapper::Resource\r\n\tproperty(:id, Serial)\r\n\tproperty(:insult, Text)\r\nend \r\n\r\nDataMapper.finalize\r\n\r\n\r\n# This is for sqlite\r\n\r\nif(!File.exists?(DBFILE))\r\n\tDataMapper.auto_migrate!\r\nelsif(File.exists?(DBFILE))\r\n\tDataMapper.auto_upgrade!\r\nend\r\n\r\n# Ignore list\r\ndef ignore_nick(user)\r\n    check = IgnoreDB.first(:nick => user.downcase)\r\n\tcheck.nil? ? (return nil) : (return true)\r\nend\r\n\r\n# Passive on/off\r\ndef disable_passive(channel)\r\n\tcheck = PassiveDB.first(:channel => channel.downcase)\r\n\tcheck.nil? ? (return nil) : (return true)\r\nend\r\n\r\n# Passive on/off\r\ndef disable_passive_files(channel)\r\n\tcheck = PassiveFDB.first(:channel => channel.downcase)\r\n\tcheck.nil? ? (return nil) : (return true)\r\nend\r\n\r\n# Bot admins\r\ndef check_admin(user)\r\n\tuser.refresh\r\n\t@admins = AdminDB.first(:nick => user.authname.downcase)\r\nend\r\n\r\n\r\n# Basic plugins\r\nrequire_relative './plugins/basic.rb'\r\nrequire_relative './plugins/admin.rb'             # Admin\r\n\r\n# Advacned plugins\r\nrequire_relative './plugins/userset.rb'           # UserSet\r\nrequire_relative './plugins/urbandictionary.rb'   # UrbanDictionary\r\nrequire_relative './plugins/weather.rb'           # Weather\r\nrequire_relative './plugins/lastfm.rb'            # Lastfm\r\nrequire_relative './plugins/uri.rb'               # Uri\r\nrequire_relative './plugins/translate.rb'         # Translate\r\nrequire_relative './plugins/twitter.rb'           # Twitter\r\n#require_relative './plugins/tweetfeed.rb'        # TweetFeed\r\nrequire_relative './plugins/hello.rb'             # Insult\r\nrequire_relative './plugins/8ball.rb'             # Eightball\r\nrequire_relative './plugins/rand.rb'              # Pick\r\nrequire_relative './plugins/youtube.rb'           # Youtube\r\nrequire_relative './plugins/bing.rb'              # Bing\r\nrequire_relative './plugins/google.rb'            # Google\r\nrequire_relative './plugins/answers.rb'           # Answers\r\nrequire_relative './plugins/tvrage.rb'            # Tvrage\r\n\r\nbot = Cinch::Bot.new do\r\n  configure do |c|\r\n    c.server            = \"irc.freenode.org\"\r\n    c.port              = 7001\r\n    c.ssl.use           = true\r\n    c.ssl.verify        = false\r\n    c.nick              = $BOTNICK\r\n    c.realname          = $BOTNICK\r\n    c.user              = $BOTNICK\r\n    c.channels          = [\"#fittit\",\"##fitbot-control\",\"##fitbot-test\"]\r\n    c.plugins.prefix    = /^:/\r\n    c.plugins.plugins   = [ Basic,\r\n                            Admin,\r\n                            UserSet,\r\n                            UrbanDictionary,\r\n                            Weather,\r\n                            Lastfm,\r\n                            Uri,\r\n                            Translate,\r\n                            Twitter,\r\n                            #TweetFeed,\r\n                            Insult,\r\n                            Eightball,\r\n                            Pick,\r\n                            Youtube,\r\n                            Bing,\r\n                            Google,\r\n                            Answers,\r\n                            Tvrage ]\r\n  end\r\n\r\n  on :message, \"hello\" do |m|\r\n    m.reply \"Hello, #{m.user.nick}\"\r\n  end\r\nend\r\n\r\nbot.start"]],"start1":0,"start2":0,"length1":0,"length2":5284}]],"length":5284,"saved":false}
{"ts":1358959371449,"patch":[[{"diffs":[[0,"plugins/"],[-1,"hello"],[1,"insult"],[0,".rb'    "]],"start1":3637,"start2":3637,"length1":21,"length2":22}]],"length":5285,"saved":false}
{"contributors":[],"silentsave":false,"ts":1358960750407,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"# This is for SQLite\r\nDBFILE = \"/path/to/sqlite.db\"\r\nDataMapper.setup(:default, \"sqlite3://\" + DBFILE)\r\n\r\n# This is for postgres (Heroku)\r\n# DataMapper.setup(:default, ENV['DATABASE_URL'] || 'postgres://localhost/mydb') \r\n\r\nclass LastfmDB \r\n    include DataMapper::Resource\r\n\tproperty(:id, Serial)\r\n\tproperty(:nick, String, :unique => true)\r\n\tproperty(:username, String)\r\nend \r\n\r\nclass IgnoreDB\r\n\tinclude DataMapper::Resource\r\n\tproperty(:id, Serial)\r\n\tproperty(:nick, String, :unique => true)\r\nend \r\n\r\nclass LocationDB \r\n\tinclude DataMapper::Resource\r\n\tproperty(:id, Serial)\r\n\tproperty(:nick, String, :unique => true)\r\n\tproperty(:location, String)\r\nend \r\n\r\nclass PassiveDB\r\n\tinclude DataMapper::Resource\r\n\tproperty(:id, Serial)\r\n\tproperty(:channel, String, :unique => true)\r\nend \r\n\r\nclass PassiveFDB\r\n\tinclude DataMapper::Resource\r\n\tproperty(:id, Serial)\r\n\tproperty(:channel, String, :unique => true)\r\nend \r\n\r\nclass JoinDB\r\n\tinclude DataMapper::Resource\r\n\tproperty(:id, Serial)\r\n\tproperty(:channel, String, :unique => true)\r\nend \r\n\r\nclass AdminDB\r\n\tinclude DataMapper::Resource\r\n\tproperty(:id, Serial)\r\n\tproperty(:nick, String, :unique => true)\r\nend \r\n\r\nclass InsultDB \r\n\tinclude DataMapper::Resource\r\n\tproperty(:id, Serial)\r\n\tproperty(:insult, Text)\r\nend \r\n\r\nDataMapper.finalize\r\n\r\n\r\n# This is for sqlite\r\n\r\nif(!File.exists?(DBFILE))\r\n\tDataMapper.auto_migrate!\r\nelsif(File.exists?(DBFILE))\r\n\tDataMapper.auto_upgrade!\r\nend\r\n"],[0,"\r\n# "]],"start1":977,"start2":977,"length1":1432,"length2":8}]],"length":3861,"saved":false}
{"ts":1358960780014,"patch":[[{"diffs":[[0," Answers\r\n\r\n"],[1,"require_relative './sqlite.rb'\r\n"],[0,"\r\n# Ignore l"]],"start1":969,"start2":969,"length1":24,"length2":56}]],"length":3893,"saved":false}
{"ts":1358962168748,"patch":[[{"diffs":[[0," './"],[-1,"sqlite"],[1,"postgres"],[0,".rb'"]],"start1":997,"start2":997,"length1":14,"length2":16}]],"length":3895,"saved":false}
{"ts":1358962753561,"patch":[[{"diffs":[[0,"ers\r"],[-1,"\nrequire_relative './plugins/tvrage.rb'            # Tvrage\r"],[0,"\n\r\nb"]],"start1":2644,"start2":2644,"length1":68,"length2":8}]],"length":3835,"saved":false}
{"ts":1358962760522,"patch":[[{"diffs":[[0,"wers"],[-1,",\r\n                            Tvrage"],[0," ]\r\n"]],"start1":3690,"start2":3690,"length1":45,"length2":8}]],"length":3798,"saved":false}
{"ts":1358962848317,"patch":[[{"diffs":[[0," = \""],[-1,"irc"],[1,"chat"],[0,".fre"]],"start1":2719,"start2":2719,"length1":11,"length2":12},{"diffs":[[0,"ode."],[-1,"org"],[1,"net"],[0,"\"\r\n "]],"start1":2733,"start2":2733,"length1":11,"length2":11},{"diffs":[[0,"   = 700"],[-1,"1"],[1,"0"],[0,"\r\n    c."]],"start1":2764,"start2":2764,"length1":17,"length2":17}]],"length":3799,"saved":false}
{"ts":1358962944566,"patch":[[{"diffs":[[0,"  = "],[-1,"7000"],[1,"6697"],[0,"\r\n  "]],"start1":2765,"start2":2765,"length1":12,"length2":12}]],"length":3799,"saved":false}
{"ts":1358963486746,"patch":[[{"diffs":[[0,"= \"sigma"],[1,"00"],[0,"\" # Make"]],"start1":501,"start2":501,"length1":16,"length2":18}]],"length":3801,"saved":false}
{"ts":1358963869266,"patch":[[{"diffs":[[0," [\"#"],[-1,"fittit\",\"#"],[0,"#fit"]],"start1":2975,"start2":2975,"length1":18,"length2":8},{"diffs":[[0,"trol\",\"#"],[1,"fittit\",\"#"],[0,"#fitbot-"]],"start1":2990,"start2":2990,"length1":16,"length2":26}]],"length":3801,"saved":false}
{"ts":1358974347759,"patch":[[{"diffs":[[0,"iram"],[-1,"101"],[0,"\" # "]],"start1":456,"start2":456,"length1":11,"length2":8}]],"length":3798,"saved":false}
{"ts":1358974688292,"patch":[[{"diffs":[[0,"-control"],[1,",oiram"],[0,"\",\"#fitt"]],"start1":2983,"start2":2983,"length1":16,"length2":22},{"diffs":[[0,"bot-test"],[1,",oiram"],[0,"\"]\r\n    "]],"start1":3015,"start2":3015,"length1":16,"length2":22},{"diffs":[[0,"    = /^"],[-1,":"],[1,"\\."],[0,"/\r\n    c"]],"start1":3053,"start2":3053,"length1":17,"length2":18}]],"length":3811,"saved":false}
{"ts":1358976625519,"patch":[[{"diffs":[[0,"L        = \""],[1,"http://codelogic.org/fitbot"],[0,"\" # Help pag"]],"start1":547,"start2":547,"length1":24,"length2":51},{"diffs":[[0,"p page\r\n"],[-1,""],[0,"$BOTGIT "]],"start1":593,"start2":593,"length1":16,"length2":16},{"diffs":[[0,"NGAPI       "],[-1,"= \""],[1,"     = \"0GBVYOgiIU+rMVqKXksWqYUh/Jok7KLazVwdxxuDXJA="],[0,"\" # For bing"]],"start1":701,"start2":701,"length1":27,"length2":76},{"diffs":[[0,"SER     "],[1,"     "],[0,"= \"mdela"]],"start1":815,"start2":815,"length1":16,"length2":21},{"diffs":[[0,"PI      "],[1,"     "],[0,"= \"R_906"]],"start1":891,"start2":891,"length1":16,"length2":21},{"diffs":[[0,"API     "],[-1,"= \""],[1,"     = \"026e348b23b3399d3c8574815cf05f6f"],[0,"\" # For "]],"start1":970,"start2":970,"length1":19,"length2":56},{"diffs":[[0,"MAPI    "],[1,"  "],[1,"   "],[0,"= \"W2GVU"]],"start1":1056,"start2":1056,"length1":16,"length2":21},{"diffs":[[0,"Answers\r"],[1,"\n$WUNDERGROUNDAPI    = \"d88fad1426e98964\" #For Weather\r"],[0,"\n\r\nrequi"]],"start1":1097,"start2":1097,"length1":16,"length2":71}]],"length":3994,"saved":false}
{"ts":1358978085476,"patch":[[{"diffs":[[0," = \""],[-1,"d88fad1426e98964"],[1,"9f9be7b71f5b5b0e"],[0,"\" #F"]],"start1":1125,"start2":1125,"length1":24,"length2":24}]],"length":3994,"saved":false}
{"ts":1358979153316,"patch":[[{"diffs":[[0,"cgi'\r\n\r\n"],[1,"#Weather\r\nrequire 'wunderground'\r\n\r\n"],[0,"# Encodi"]],"start1":294,"start2":294,"length1":16,"length2":52}]],"length":4030,"saved":false}
{"contributors":[],"silentsave":false,"ts":1359009085150,"patch":[[{"diffs":[[0,"Answers\r"],[1,"\nrequire_relative './plugins/wilks.rb'           # Wilks\r"],[0,"\n\r\nbot ="]],"start1":2858,"start2":2858,"length1":16,"length2":73},{"diffs":[[0,"trol"],[-1,","],[1," "],[0,"oiram\","],[-1,"\"#fittit\","],[1,"\r\n                            #\"#fittit\",\r\n                            "],[0,"\"##f"]],"start1":3263,"start2":3263,"length1":26,"length2":87},{"diffs":[[0,"bot-test"],[-1,","],[1," "],[0,"oiram\"]\r"]],"start1":3352,"start2":3352,"length1":17,"length2":17},{"diffs":[[0," Answers"],[-1," "],[1,",\r\n                            Wilks"],[0,"]\r\n  end"]],"start1":4036,"start2":4036,"length1":17,"length2":52}]],"length":4183,"saved":false}
{"ts":1359009770174,"patch":[[{"diffs":[[0,"        "],[-1,"#"],[0,"\"#fittit"]],"start1":3297,"start2":3297,"length1":17,"length2":16}]],"length":4182,"saved":false}
{"contributors":[],"silentsave":false,"ts":1359009836716,"patch":[[{"diffs":[[0,"        "],[1,"  "],[0,"# Admin\r"]],"start1":1911,"start2":1911,"length1":16,"length2":18},{"diffs":[[0," Admin\r\n"],[1,"    "],[0,"\r\n# Adva"]],"start1":1922,"start2":1922,"length1":16,"length2":20},{"diffs":[[0,"Advacned plugins"],[1,"  "],[0,"\r\nrequire_relati"]],"start1":1938,"start2":1938,"length1":32,"length2":34},{"diffs":[[0,"/userset.rb'"],[1,"  "],[0,"           #"]],"start1":1985,"start2":1985,"length1":24,"length2":26},{"diffs":[[0,"y.rb'   "],[1," "],[1," "],[0,"# UrbanD"]],"start1":2063,"start2":2063,"length1":16,"length2":18},{"diffs":[[0,"        "],[1,"  "],[0,"# Weathe"]],"start1":2134,"start2":2134,"length1":16,"length2":18},{"diffs":[[0,"s/lastfm.rb'"],[1,"  "],[0,"            "]],"start1":2181,"start2":2181,"length1":24,"length2":26},{"diffs":[[0,"            "],[1,"  "],[0,"# Uri\r\nrequi"]],"start1":2255,"start2":2255,"length1":24,"length2":26},{"diffs":[[0,"ranslate.rb'"],[1,"  "],[0,"         # T"]],"start1":2305,"start2":2305,"length1":24,"length2":26},{"diffs":[[0,"'           "],[1," "],[1," "],[0,"# Twitter\r\n#"]],"start1":2379,"start2":2379,"length1":24,"length2":26},{"diffs":[[0,"weetfeed.rb'"],[1,"  "],[0,"        # Tw"]],"start1":2434,"start2":2434,"length1":24,"length2":26},{"diffs":[[0,"        "],[1," "],[0,"# Insult"]],"start1":2512,"start2":2512,"length1":16,"length2":17},{"diffs":[[0,"        "],[1," "],[1," "],[0,"# Eightb"]],"start1":2573,"start2":2573,"length1":16,"length2":18},{"diffs":[[0,"        "],[1,"  "],[0,"# Pick\r\n"]],"start1":2638,"start2":2638,"length1":16,"length2":18},{"diffs":[[0,"/youtube.rb'"],[1,"  "],[0,"           #"]],"start1":2683,"start2":2683,"length1":24,"length2":26},{"diffs":[[0,"        "],[1,"  "],[0,"# Bing\r\n"]],"start1":2761,"start2":2761,"length1":16,"length2":18},{"diffs":[[0,"s/google.rb'"],[1,"  "],[0,"            "]],"start1":2805,"start2":2805,"length1":24,"length2":26},{"diffs":[[0,"        "],[1," "],[1," "],[0,"# Answer"]],"start1":2883,"start2":2883,"length1":16,"length2":18},{"diffs":[[0,"ns/wilks.rb'"],[1,"    "],[0,"           #"]],"start1":2929,"start2":2929,"length1":24,"length2":28}]],"length":4223,"saved":false}
{"ts":1359009847197,"patch":[[{"diffs":[[0,"er\r\n"],[-1,"#require_relative './plugins/tweetfeed.rb'          # TweetFeed\r\n"],[0,"requ"]],"start1":2400,"start2":2400,"length1":73,"length2":8}]],"length":4158,"saved":false}
{"ts":1359009849481,"patch":[[{"diffs":[[0,"r,\r\n"],[-1,"                            #TweetFeed,\r\n"],[0,"    "]],"start1":3717,"start2":3717,"length1":49,"length2":8}]],"length":4117,"saved":false}
{"ts":1359010572218,"patch":[[{"diffs":[[0,"# Wilks\r"],[1,"\nrequire_relative './plugins/converter.rb'           # Converter\r"],[0,"\n\r\nbot ="]],"start1":2891,"start2":2891,"length1":16,"length2":81},{"diffs":[[0,"   Wilks"],[1,",\r\n                            Converter"],[0,"]\r\n  end"]],"start1":4071,"start2":4071,"length1":16,"length2":56}]],"length":4222,"saved":false}
